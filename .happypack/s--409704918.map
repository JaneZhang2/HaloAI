{"version":3,"sources":["node_modules/@ctrip/crnweb/src/crn/lib/NavigationBarConfig.js"],"names":["fontSize","global","fontSizeBase","remFn","val","parseFloat","toFixed","NavigationBarConfig","NAV_BUTTON_STYLE","mapper","LeftButton","route","leftButton","pageContext","display","position","width","height","RightButton","rightButtons","length","flexDirection","right","justifyContent","alignItems","Title","sRight","style","maxWidth","left","overflow","textAlign","color","fontWeight","title"],"mappings":";AACA,a;AACA,4B;;;AAGA,0D;;AAEA,GAAIA,UAAWC,OAAOC,YAAP,EAAuB,GAAtC;AACA,GAAIC,OAAQ,SAACC,GAAD,QAASC,YAAW,CAAED,IAAMJ,QAAR,EAAmBM,OAAnB,CAA2B,CAA3B,CAAX,EAA4C,KAArD,EAAZ,C;;AAEMC,mB;AACF,8BAAc;AACV,GAAMC,kBAAmBL,MAAM,EAAN,CAAzB;AACA,KAAKM,MAAL,CAAc;AACVC,WAAY,oBAAUC,KAAV,CAA6C;AACrD,GAAIC,YAAaD,MAAME,WAAN,CAAkBD,UAAnC;AACA,GAAI,CAACA,UAAL,CAAiB;AACbA;AACI,8BAAC,cAAD,EAAM,MAAO;AACTE,QAAS,OADA;AAETC,SAAU,UAFD;AAGTC,MAAOR,gBAHE;AAITS,OAAQT,gBAJC,CAAb;;AAMI,8BAAC,6BAAD,EAAqB,KAAM,WAA3B,EANJ,CADJ;;;;AAWH;;AAED,MAAOI,WAAP;AACH,CAlBS;;AAoBVM,YAAa,qBAAUP,KAAV,CAA6C;AACtD,GAAIA,MAAME,WAAN,EAAqBF,MAAME,WAAN,CAAkBM,YAAvC,EAAuDR,MAAME,WAAN,CAAkBM,YAAlB,CAA+BC,MAA/B,CAAwC,CAAnG,CAAsG;AAClG,MAAO,+BAAC,cAAD,EAAM,MAAO;AAChBC,cAAe,KADC;AAEhBN,SAAU,UAFM;AAGhBO,MAAO,CAHS;AAIhBC,eAAgB,QAJA;AAKhBC,WAAY,QALI,CAAb;AAMHb,MAAME,WAAN,CAAkBM,YAAlB,CAA+B,CAA/B,CANG,CAMgCR,MAAME,WAAN,CAAkBM,YAAlB,CAA+B,CAA/B,CANhC,CAAP;AAOH,CARD,IAQO;AACH,MAAO,KAAP;AACH;AACJ,CAhCS;;AAkCVM,MAAO,eAAUd,KAAV,CAA6C;AAChD,GAAIe,QAASlB,gBAAb;AACA,GAAIG,MAAME,WAAN,EAAqBF,MAAME,WAAN,CAAkBM,YAAvC,EAAuDR,MAAME,WAAN,CAAkBM,YAAlB,CAA+BC,MAA/B,CAAwC,CAAnG,CAAsG;AAClGM,OAAUf,MAAME,WAAN,CAAkBM,YAAlB,CAA+BC,MAA/B,CAAwCZ,gBAAlD;AACH;AACD;AACI,8BAAC,cAAD,EAAM;AACCG,MAAMgB,KADP;AAEFZ,SAAU,UAFR;AAGFa,SAAU,MAHR;AAIFC,KAAMrB,gBAJJ;AAKFc,MAAOI,MALL;AAMFT,OAAQT,gBANN;AAOFsB,SAAU,QAPR;AAQFP,eAAgB,QARd;AASFC,WAAY,QATV,EAAN;;AAWI,8BAAC,cAAD,EAAM,MAAO,CAACO,UAAW,QAAZ,CAAsBC,MAAO,OAA7B,CAAsCC,WAAY,EAAlD,CAAsDjC,SAAU,EAAhE,CAAoEgB,MAAO,KAA3E,CAAb;AACM,cAAe,CADrB;AAEKL,MAAMuB,KAFX,CAXJ,CADJ;;;;AAkBH,CAzDS,CAAd;;AA2DH,C;;;AAGU3B,mB","file":"NavigationBarConfig.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["\r\n'use strict';\r\nimport React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\n\r\nimport NavigationBarButton from './NavigationBarButton';\r\n\r\nlet fontSize = global.fontSizeBase || 100;\r\nlet remFn = (val) => parseFloat(((val / fontSize)).toFixed(5)) + 'rem';\r\n\r\nclass NavigationBarConfig {\r\n    constructor() {\r\n        const NAV_BUTTON_STYLE = remFn(44);\r\n        this.mapper = {\r\n            LeftButton: function (route, navigator, index, navState) {\r\n                let leftButton = route.pageContext.leftButton;\r\n                if (!leftButton) {\r\n                    leftButton = (\r\n                        <View style={{\r\n                            display: 'block',\r\n                            position: 'absolute',\r\n                            width: NAV_BUTTON_STYLE,\r\n                            height: NAV_BUTTON_STYLE\r\n                        }}>\r\n                            <NavigationBarButton type={'icon_back'}>\r\n                            </NavigationBarButton>\r\n                        </View>\r\n                    );\r\n                }\r\n                ;\r\n                return leftButton;\r\n            },\r\n\r\n            RightButton: function (route, navigator, index, navState) {\r\n                if (route.pageContext && route.pageContext.rightButtons && route.pageContext.rightButtons.length > 0) {\r\n                    return <View style={{\r\n                        flexDirection: 'row',\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}>{route.pageContext.rightButtons[0]}{route.pageContext.rightButtons[1]}</View>;\r\n                } else {\r\n                    return null;\r\n                }\r\n            },\r\n\r\n            Title: function (route, navigator, index, navState) {\r\n                let sRight = NAV_BUTTON_STYLE;\r\n                if (route.pageContext && route.pageContext.rightButtons && route.pageContext.rightButtons.length > 0) {\r\n                    sRight = (route.pageContext.rightButtons.length * NAV_BUTTON_STYLE);\r\n                }\r\n                return (\r\n                    <View style={{\r\n                        ...route.style,\r\n                        position: 'absolute',\r\n                        maxWidth: '100%',\r\n                        left: NAV_BUTTON_STYLE,\r\n                        right: sRight,\r\n                        height: NAV_BUTTON_STYLE,\r\n                        overflow: 'hidden',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Text style={{textAlign: 'center', color: 'white', fontWeight: '', fontSize: 17, width: '90%'}}\r\n                              numberOfLines={2}>\r\n                            {route.title}\r\n                        </Text>\r\n                    </View>\r\n                );\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default NavigationBarConfig\r\n"]}