{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/wrapper/LayoutWrapper/getLayout.js"],"names":["cw_scale","Dimemsions","get","scale","getCumulativeOffset","obj","left","offsetLeft","top","offsetTop","x","y","getLayout","element","rect","width","offsetWidth","height","offsetHeight"],"mappings":";;;AAGA,2D;;AAEA,GAAIA,UAASC,gBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAtC;;AAEA,QAASC,oBAAT,CAA6BC,GAA7B,CAAkC;AAC9B,GAAIC,MAAOD,IAAIE,UAAf;AACIC,IAAMH,IAAII,SADd;;;;;;;;;;;;;;;;AAiBA,MAAO;AACHC,EAAGJ,IADA;AAEHK,EAAGH,GAFA,CAAP;;AAIH;;;AAGD,QAASI,UAAT,CAAmBC,OAAnB,CAA4B;AACxB,GAAIC,MAAOV,oBAAoBS,OAApB,CAAX;;AAEA,MAAO;AACHH,EAAGI,KAAKJ,CAAL,CAAOV,QADP;AAEHW,EAAGG,KAAKH,CAAL,CAAOX,QAFP;AAGHe,MAAOF,QAAQG,WAAR,CAAoBhB,QAHxB;AAIHiB,OAAQJ,QAAQK,YAAR,CAAqBlB,QAJ1B,CAAP;;AAMH,C;;AAEcY,S","file":"getLayout.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["// get element x, y\r\n\r\n\r\nimport Dimemsions from \"./../../../apis/Dimensions/index.web\";\r\n\r\nlet cw_scale=Dimemsions.get('window').scale;\r\n\r\nfunction getCumulativeOffset(obj) {\r\n    var left = obj.offsetLeft,\r\n        top = obj.offsetTop;\r\n\r\n    //下面代码的问题：此处实际计算的是元素在整个页面上的位置信息，若利用onLayout获得位置信息，\r\n    // 那么只能用window.scrollTo方法进行滚动,用ScrollView的scrollTo滚动的结果是错误的。\r\n    // 具体可参考cw FlatList的scrollToEnd和scrollToIndex等方法。\r\n    // 其实保留下面的代码也可以，ScrollView内的滚动可以用高度累加实现，比如要滚动到第N个元素位置，\r\n    // 那么前N-1个元素的高度和就是ScrollView要滚动的距离。\r\n    // 删掉下面的代码有两个好处：一是while循环可能很耗时(层级灰常多时)，删掉可提升性能；\r\n    // 二是与RN的onLayout值保持一致，\r\n    // 具体可参考RN FlatList 的scrollToEnd和scrollToIndex实现方式(利用onLayout获得offset)。\r\n    // obj = obj.offsetParent;\r\n    // while (obj){\r\n    //     left += obj.offsetLeft;\r\n    //     top += obj.offsetTop;\r\n    //     obj = obj.offsetParent;\r\n    // }\r\n    return {\r\n        x: left,\r\n        y: top\r\n    };\r\n}\r\n\r\n// this functions returns the x, y, width and height of a given dom node\r\nfunction getLayout(element) {\r\n    var rect = getCumulativeOffset(element);\r\n\r\n    return {\r\n        x: rect.x/cw_scale,\r\n        y: rect.y/cw_scale,\r\n        width: element.offsetWidth/cw_scale,\r\n        height: element.offsetHeight/cw_scale\r\n    };\r\n}\r\n\r\nexport default getLayout\r\n"]}