{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/apis/EventEmitter/DeviceEventEmitter.web.js"],"names":["DeviceEventEmitter","message","handler","scope","messageQueue","push","eventName","eventHandler","args","objectIndex","item","length","apply","global","Array","subscribe","data","publish","unsubscribe"],"mappings":"quBAAMA,mB;;AAEyC;;AAE1C,C;AACiBC,O,CAASC,O,CAASC,K,CAAM;AACtC,GAAGF,SAASC,OAAZ,CAAoB;AAChB,GAAI,CAACF,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAL,CAA+C;AAC3CD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAA2C,EAA3C;AACH;AACDD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCI,IAAzC,CAA8C,CAACF,MAAOA,KAAR,CAAeD,QAASA,OAAxB,CAA9C;AACH;AACJ,C;AACsBD,O,CAAQ;AAC3B,MAAO,CAACK,UAAUL,OAAX,CAAmBM,aAAaP,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAhC,CAAP;AACH,C;AACcA,O,CAASO,I,CAAM;;;AAGdC,WAHc;AAIdC,IAJc,CAC1B,GAAIV,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAJ,CACA,CACI,IAAQQ,WAAR,CAAqB,CAArB,CAAwBA,YAAYT,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCU,MAA7E,CAAoFF,aAApF,CAAkG,CAC1FC,IAD0F,CACnFV,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCQ,WAAzC,CADmF;AAE9FC,KAAKR,OAAL,CAAaU,KAAb,CAAmBF,KAAKP,KAAL,CAAWO,KAAKP,KAAhB,CAAuBU,MAA1C,CAAkDL,eAAgBM,MAAhB,CAAsBN,IAAtB,CAA2B,CAACA,IAAD,CAA7E;AACH;AACJ;AACD,MAAQR,oBAAmBI,YAAnB,CAAgCH,OAAhC,GAA4CD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCU,MAA7F;AACH,C;AACkBV,O,CAAS;AACxB,GAAID,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAJ,CAA8C;AACtC,MAAOD,oBAAmBI,YAAnB,CAAgCH,OAAhC,CAAP;AACP;AACJ,C;;AAEgC;AAC7BD,mBAAmBe,SAAnB;AACH,C;;AAEoBd,O,CAAgB,UAALO,IAAK;AACjC,GAAI,CAACR,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAL,CAA+C;AAC3CD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAA2C,EAA3C;AACH,CAHgC,0BAALO,IAAK,iDAALA,IAAK;AAIjCR,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCe,IAAzC,CAA8CR,IAA9C;AACH,C;;AAEeP,O,CAAQ;AACpB,GAAI,CAACD,mBAAmBI,YAAnB,CAAgCH,OAAhC,CAAL,CAA+C;AAC3CD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAA2C,EAA3C;AACH;AACDD,mBAAmBiB,OAAnB,CAA2BhB,OAA3B,CAAmCD,mBAAmBI,YAAnB,CAAgCH,OAAhC,EAAyCe,IAA5E;AACAhB,mBAAmBkB,WAAnB,CAA+BjB,OAA/B;AACH,C,yCAhDMG,Y,CAAe,E;;;;;;AAsDXJ,kB","file":"DeviceEventEmitter.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["class DeviceEventEmitter{\r\n    static messageQueue = {};\r\n    static addListener(message, handler, scope){\r\n\r\n    }\r\n    static  subscribe(message, handler, scope){\r\n        if(message&&handler){\r\n            if (!DeviceEventEmitter.messageQueue[message]) {\r\n                DeviceEventEmitter.messageQueue[message] = [];\r\n            }\r\n            DeviceEventEmitter.messageQueue[message].push({scope: scope, handler: handler});\r\n        }\r\n    }\r\n    static getEventEmitter(message){\r\n        return {eventName:message,eventHandler:DeviceEventEmitter.messageQueue[message]} ;\r\n    }\r\n    static publish(message, args) {\r\n        if (DeviceEventEmitter.messageQueue[message])\r\n        {\r\n            for(var objectIndex =0; objectIndex<DeviceEventEmitter.messageQueue[message].length;objectIndex++){\r\n                var item = DeviceEventEmitter.messageQueue[message][objectIndex];\r\n                item.handler.apply(item.scope?item.scope: global, args instanceof Array?args:[args]);\r\n            }\r\n        }\r\n        return  DeviceEventEmitter.messageQueue[message] && DeviceEventEmitter.messageQueue[message].length;\r\n    }\r\n    static unsubscribe(message) {\r\n        if (DeviceEventEmitter.messageQueue[message]) {\r\n                delete DeviceEventEmitter.messageQueue[message];\r\n        }\r\n    }\r\n\r\n    static _registryFunction(...args){\r\n        DeviceEventEmitter.subscribe(...args);\r\n    }\r\n\r\n    static _registryData(message,...args){\r\n        if (!DeviceEventEmitter.messageQueue[message]) {\r\n            DeviceEventEmitter.messageQueue[message] = [];\r\n        }\r\n        DeviceEventEmitter.messageQueue[message].data=args;\r\n    }\r\n\r\n    static _trigger(message){\r\n        if (!DeviceEventEmitter.messageQueue[message]) {\r\n            DeviceEventEmitter.messageQueue[message] = [];\r\n        }\r\n        DeviceEventEmitter.publish(message,DeviceEventEmitter.messageQueue[message].data);\r\n        DeviceEventEmitter.unsubscribe(message);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default DeviceEventEmitter;\r\n"]}