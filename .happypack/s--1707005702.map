{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/components/TextInput/index.web.js"],"names":["iphone","global","document","navigator","userAgent","match","typeMap","autoCapitalizer","value","replace","mat","toUpperCase","TextInput","props","_lastValue","inputRefCallback","bind","el","inputRef","accessibilityLabel","autoComplete","autoFocus","defaultValue","editable","keyboardType","maxLength","multiline","numberOfLines","onBlur","onChange","onKeyDown","onKeyUp","onKeyPress","onChangeText","onSelectionChange","placeholder","password","secureTextEntry","style","testID","input","propsCommon","ref","_onBlur","onFocus","_onFocus","onSelect","_onSelectionChange","_onChange","readOnly","_onKeyPress","className","id","propsMultiline","StyleSheet","fix","styles","initial","rows","type","propsSingleline","single","children","inputContainer","blurOnSubmit","TextInputState","focus","_lock","__lock","_unlock","addEventListener","removeEventListener","nextProps","currentFocus","e","clearTextOnFocus","selectTextOnFocus","node","select","body","height","clientHeight","nativeEvent","text","target","onEndEditing","blur","autoCapitalize","unlock","selectionStart","number","email","selectionEnd","keyCode","onSubmitEditing","selectionDirection","selection","start","end","direction","event","Component","defaultProps","placeholderTextColor","display","flex","create","width","appearance","backgroundColor","borderColor","borderWidth","boxSizing","color","font","padding","fontSize"],"mappings":"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","file":"index.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/*!\r\n * @providesModule TextInput\r\n */\r\n\r\n// import React from 'react';\r\nimport React,{Component} from 'react';\r\nimport View from './../View/View.web';\r\nimport StyleSheet from './../../apis/StyleSheet/StyleSheet.web';\r\nimport TextInputState from './TextInputState.web';\r\nimport NativeMethodsWrapper from './../../modules/wrapper/NativeMethodsWrapper/index.web';\r\n\r\nlet iphone=false;\r\nif(global.document){\r\n     iphone = !!(global.navigator.userAgent.match(/(iPhone\\sOS)\\s([\\d_]+)/));\r\n}\r\n\r\n/**\r\n * TextInput组件\r\n *\r\n * @component TextInput\r\n * @example ./TextInput.js[1-118]\r\n * @version >=v1.4.0\r\n * @description  TextInput组件是一个允许用户在应用中通过键盘输入文本的基本组件。\r\n *\r\n * **注意** 该组件是受控组件，如果提供了value属性，原生值会强制与value值保持一致。你可以通过onChangeText事件来读取用户的输入并重设value以达到更改的目的。\r\n *\r\n * ![TextInput](./images/component/TextInput.gif)\r\n *\r\n */\r\n\r\n// 将native type转换为web input type\r\nconst typeMap = {\r\n    'default': 'text',\r\n    'ascii-capable': 'text',\r\n    'numbers-and-punctuation': 'number',\r\n    'url': 'url',\r\n    'number-pad': 'number',\r\n    'phone-pad': 'tel',\r\n    'name-phone-pad': 'text',\r\n    'email-address': 'email',\r\n    'decimal-pad': 'number',\r\n    'twitter': 'text',\r\n    'web-search': 'search',\r\n    'numeric': 'number'\r\n};\r\n    // 大写\r\nconst autoCapitalizer = {\r\n    'none': function(value) {\r\n        return value\r\n    },\r\n    'sentences': function(value) {\r\n        return value.replace(/(^[a-z])|[\\.\\,\\?\\!\\;\\'\\\"。？！；][a-z]/g, function(mat) {\r\n            return mat.toUpperCase()\r\n        })\r\n    },\r\n    'words': function(value) {\r\n        return value.replace(/(^[a-z])|[\\s\\.\\,\\?\\!\\;\\'\\\"。？！；][a-z]/g, function(mat) {\r\n            return mat.toUpperCase()\r\n        })\r\n    },\r\n    'characters': function(value) {\r\n        return value.toUpperCase()\r\n    },\r\n};\r\n\r\n/**\r\n RN0.32\r\n // 暂不支持\r\n autoCorrect\r\n\r\n onContentSizeChange\r\n\r\n\r\n placeholderTextColor,\r\n returnKeyType\r\n selectionColor\r\n\r\n // ios\r\n\r\n selectionState:\r\n clearButtonMode:\r\n dataDetectorTypes\r\n enablesReturnKeyAutomatically\r\n keyboardAppearance\r\n\r\n\r\n // android\r\n inlineImageLeft\r\n inlineImagePadding\r\n\r\n returnKeyLabel\r\n underlineColorAndroid\r\n\r\n\r\n underlineColorAndroid\r\n\r\n\r\n //已支持\r\n autoCapitalize\r\n autoFocus\r\n `blurOnSubmit\r\n clearTextOnFocus\r\n defaultValu\r\n editable\r\n keyboardType\r\n maxLength\r\n multiline\r\n `numberOfLines\r\n onChangeText\r\n `onEndEditing\r\n onFocus\r\n\r\n `onLayout\r\n onSelectionChange\r\n `onSubmitEditing\r\n placeholder\r\n secureTextEntry\r\n selectTextOnFocus\r\n style\r\n value\r\n\r\n `isFocused\r\n `clear\r\n */\r\n// mixins: [NativeMethodsMixin],\r\nclass TextInput extends Component{\r\n\r\n    constructor(props){\r\n       super(props);\r\n       this.inputRefCallback=this.inputRefCallback.bind(this);\r\n    }\r\n    inputRefCallback(el){\r\n        this.inputRef=el;\r\n    }\r\n    static defaultProps=  {\r\n            autoCapitalize: 'none',\r\n            autoFocus     : false,\r\n            editable      : true,\r\n            keyboardType  : 'default',\r\n            multiline     : false,\r\n            placeholder   : '',\r\n            placeholderTextColor: '',\r\n            secureTextEntry: false, // if true type to be password\r\n            defaultValue  : '',\r\n            style: {\r\n                display:'block',\r\n                flex : 1,\r\n            }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props,\r\n            {\r\n                accessibilityLabel,\r\n                autoComplete,\r\n                autoFocus,\r\n                defaultValue,\r\n                editable,\r\n                keyboardType,\r\n                maxLength,\r\n                multiline,\r\n                numberOfLines,\r\n                onBlur,\r\n                onChange,\r\n                onKeyDown,\r\n                onKeyUp,\r\n                onKeyPress,\r\n                onChangeText,\r\n                onSelectionChange,\r\n                placeholder,\r\n                password,\r\n                secureTextEntry,\r\n                style,\r\n                testID,\r\n                value,\r\n            } = props,\r\n            input,\r\n            propsCommon = {\r\n                ref: this.inputRefCallback,\r\n                'aria-label': accessibilityLabel,\r\n                autoComplete: autoComplete && 'on',\r\n                // autoFocus, // 屏蔽掉focusNode.js\r\n                defaultValue,\r\n                maxLength,\r\n                onBlur: onBlur && this._onBlur.bind(this),\r\n                onFocus:  this._onFocus.bind(this),\r\n                onSelect: onSelectionChange && this._onSelectionChange.bind(this),\r\n                onChange: this._onChange.bind(this),\r\n                placeholder,\r\n                readOnly: !editable,\r\n                // testID,\r\n                value,\r\n                onKeyDown,\r\n                onKeyUp,\r\n                onKeyPress: this._onKeyPress.bind(this),\r\n            };\r\n\r\n        if (props.className){\r\n            propsCommon.className = props.className;\r\n        }\r\n        if (props.id){\r\n            propsCommon.id = props.id;\r\n        }\r\n\r\n        if (multiline) {\r\n            let propsMultiline = {\r\n                ...propsCommon,\r\n                style: StyleSheet.fix([styles.initial, props.style]),\r\n                rows:numberOfLines\r\n            };\r\n            input = (\r\n                <textarea {...propsMultiline}></textarea>\r\n            );\r\n        } else {\r\n            let type = typeMap[keyboardType] || 'text'\r\n            if (password || secureTextEntry) type = 'password'\r\n            let propsSingleline = {\r\n                ...propsCommon,\r\n                style: StyleSheet.fix([styles.initial,styles.single, props.style]),\r\n                type\r\n            };\r\n            input = (\r\n                <input {...propsSingleline}/>\r\n            )\r\n        }\r\n        if (!props.children){\r\n            return input;\r\n        }\r\n        // 理论上来说TextInput prop 'children' is only supported width multiline\r\n        // 但目前qrn在这边有点bug\r\n        // 不过还是暂时保留\r\n        return (\r\n            <View\r\n                style={styles.inputContainer}\r\n                className=\"TextInput\"\r\n            >\r\n                {input}\r\n                {props.children}\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    componentWillMount(){\r\n        this.blurOnSubmit = this.props.blurOnSubmit ? this.props.blurOnSubmit : (this.props.multiline ? false : true);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let input = this.inputRef;\r\n        if (this.props.autoFocus){\r\n            TextInputState.focus(input);\r\n        }\r\n        this._lock = function(){\r\n            this.__lock = true;\r\n        }.bind(this)\r\n        this._unlock = function(){\r\n            this.__lock = false;\r\n        }.bind(this)\r\n        input.addEventListener('compositionstart', this._lock)\r\n        input.addEventListener('compositionend', this._unlock)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let input = this.inputRef;\r\n        input.removeEventListener('compositionstart', this._lock)\r\n        input.removeEventListener('compositionend', this._unlock)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.blurOnSubmit = nextProps.blurOnSubmit ? nextProps.blurOnSubmit : (nextProps.multiline ? false : true);\r\n    }\r\n\r\n\r\n    /**\r\n     * @property isFocused\r\n     * @type function\r\n     * @description 返回值表明当前输入框是否获得了焦点。true表示获取到焦点，false表示没有获取焦点\r\n     */\r\n    isFocused(){\r\n        return TextInputState.currentFocus() === this.inputRef;\r\n    }\r\n\r\n\r\n    /**\r\n     * @property clear\r\n     * @type function\r\n     * @description 清空输入框的内容\r\n     */\r\n    clear(){\r\n        this.inputRef.value = '';\r\n    }\r\n\r\n    _onFocus(e) {\r\n        let { clearTextOnFocus, onFocus, selectTextOnFocus } = this.props,\r\n            node = this.inputRef;\r\n        if (!node) return // 未屏蔽focusNode.js会出现这个问题\r\n        if (clearTextOnFocus) {\r\n            node.value = ''\r\n        };\r\n        if (selectTextOnFocus) node.select && node.select();\r\n\t    //fix:安卓浏览器上软键盘弹出后页面被顶出可视区域 (Issue #418)\r\n\t    if(!iphone){\r\n\t\t    global.document.body.style.height = global.document.body.clientHeight+'px';\r\n\t    }\r\n        TextInputState.focus(node);\r\n        if (onFocus) {\r\n            e.nativeEvent.text = e.target.value;\r\n            onFocus(e);\r\n        }\r\n    }\r\n    _onBlur(e) {\r\n        let { onBlur, onEndEditing } = this.props;\r\n        TextInputState.blur(this.inputRef)\r\n\t    //fix:安卓浏览器上软键盘弹出后页面被顶出可视区域 (Issue #418)\r\n\t    if(!iphone){\r\n            global.document.body.style.height = \"100%\";\r\n\t    }\r\n        if (onBlur) {\r\n            e.nativeEvent.text = e.target.value;\r\n            onBlur(e);\r\n        }\r\n        if(onEndEditing){\r\n            e.nativeEvent.text = e.target.value;\r\n            onEndEditing(e);\r\n        }\r\n    }\r\n    _lastValue=null\r\n    _onChange(e) {\r\n        //fix:Failed to read the 'selectionStart' property from 'HTMLInputElement': The input element's type ('number') does not support selection.\r\n        let invalidType= {\r\n            number: true,\r\n            email: true\r\n        };\r\n        let nativeEvent = e.nativeEvent,\r\n            {autoCapitalize} = this.props,\r\n            target = nativeEvent.target,\r\n            value = target.value,\r\n            unlock = !this.__lock,\r\n            selectionStart = !invalidType[this.inputRef.type] && this.inputRef.selectionStart;\r\n        //修复三星S6中360浏览器触发两次onChange事件\r\n        if(this._lastValue == value){\r\n            return;\r\n        }\r\n        this._lastValue = value;\r\n        // __lock的时候才去格式化value，但是不影响onChange事件去触发suggest\r\n        if (unlock) {\r\n            autoCapitalize = autoCapitalizer[autoCapitalize] || autoCapitalizer['none']\r\n            value = autoCapitalize(value)\r\n            this.inputRef.value = value\r\n            if('number'===typeof selectionStart){\r\n                this.inputRef.selectionStart = selectionStart;\r\n                this.inputRef.selectionEnd = selectionStart;\r\n            }\r\n        }\r\n        let { onChange, onChangeText } = this.props;\r\n        // 传递unlock，提供较强的扩展性\r\n        onChangeText && onChangeText(value,unlock);\r\n        if (onChange) {\r\n            e.nativeEvent.text = value;\r\n            onChange(e, unlock);\r\n        }\r\n    }\r\n    _onKeyPress(e){\r\n        e.nativeEvent.text = e.target.value;\r\n        // console.log('_onKeyPress',this.props);\r\n        this.props.onKeyPress && this.props.onKeyPress(e);\r\n        if(e.nativeEvent.keyCode === 13){\r\n            if(!this.props.multiline){\r\n                this.blurOnSubmit && TextInputState.blur(this.inputRef);\r\n                this.props.onSubmitEditing && this.props.onSubmitEditing(e)\r\n            }else{\r\n                if(this.blurOnSubmit){\r\n                    TextInputState.blur(this.inputRef);\r\n                    this.props.onSubmitEditing && this.props.onSubmitEditing(e)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onSelectionChange(e) {\r\n        // console.log(e,e.nativeEvent)\r\n        let { onSelectionChange } = this.props;\r\n        if (onSelectionChange) {\r\n            let { selectionDirection, selectionEnd, selectionStart } = e.target;\r\n            e.nativeEvent = e.nativeEvent || {}\r\n            e.nativeEvent.text = e.target.value;\r\n            e.nativeEvent.selection = {\r\n                start: selectionStart,\r\n                end: selectionEnd,\r\n                direction: selectionDirection,\r\n            }\r\n            let event = {\r\n                selectionDirection,\r\n                selectionEnd,\r\n                selectionStart,\r\n                nativeEvent: e.nativeEvent\r\n            };\r\n            onSelectionChange(event);\r\n        }\r\n    }\r\n}\r\nTextInput = NativeMethodsWrapper(TextInput);\r\n\r\nlet styles = StyleSheet.create({\r\n    inputContainer: {\r\n        'font-size': '0.14rem',\r\n        flex:1,\r\n    },\r\n    initial: {\r\n        width: '100%',\r\n        appearance: 'none',\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'black',\r\n        borderWidth: 0,\r\n        boxSizing: 'border-box',\r\n        color: 'inherit',\r\n        font: 'inherit',\r\n        padding: 0,\r\n        fontSize: 14,\r\n        display:'block',\r\n    },\r\n    single:{\r\n        height: 30,\r\n    }\r\n});\r\n\r\nTextInput.TextInputState = TextInputState;\r\n\r\nexport default TextInput;\r\n\r\n"]}