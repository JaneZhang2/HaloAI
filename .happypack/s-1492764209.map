{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/react-lib/normalizeNativeEvent.js"],"names":["_cw_scale","Dimensions","get","scale","normalizeTouches","touches","Array","prototype","slice","call","map","touch","identifier","rect","target","getBoundingClientRect","left","top","locationX","pageX","locationY","pageY","_normalized","clientX","clientY","force","radiusX","radiusY","rotationAngle","screenX","screenY","timestamp","Date","now","normalizeTouchEvent","nativeEvent","changedTouches","event","preventDefault","bind","stopImmediatePropagation","stopPropagation","contentOffset","x","offsetX","y","offsetY","normalizeMouseEvent","domEvent","type","normalizeNativeEvent","eventType","mouse","indexOf"],"mappings":"yDAAA,wD;AACA,GAAIA,WAAYC,gBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAzC;;AAEA,GAAMC,kBAAmB,cAACC,QAAD,2DAAW,EAAX,OAAkBC,OAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,OAA3B,EAAoCK,GAApC,CAAwC,SAACC,KAAD,CAAW;AAC1F,GAAMC,YAAaD,MAAMC,UAAN,CAAmB,EAAnB,CAAyBD,MAAMC,UAAN,CAAmB,EAA5C,CAAkDD,MAAMC,UAA3E;;AAEA,GAAMC,MAAQF,MAAMG,MAAN,EAAgBH,MAAMG,MAAN,CAAaC,qBAA7B,EAAoD,MAAOJ,OAAMG,MAAN,CAAaC,qBAApB,EAA4C,UAAhG,EAA6GJ,MAAMG,MAAN,CAAaC,qBAAb,EAA9G,EAAqJ,CAACC,KAAK,CAAN,CAAQC,IAAI,CAAZ,CAAlK;AACA,GAAMC,WAAY,CAACP,MAAMQ,KAAN,CAAcN,KAAKG,IAApB,EAA0BhB,SAA5C;AACA,GAAMoB,WAAY,CAACT,MAAMU,KAAN,CAAcR,KAAKI,GAApB,EAAyBjB,SAA3C;;AAEA,MAAO;AACHsB,YAAa,IADV;AAEHC,QAASZ,MAAMY,OAFZ;AAGHC,QAASb,MAAMa,OAHZ;AAIHC,MAAOd,MAAMc,KAJV;AAKHP,UAAWA,SALR;AAMHE,UAAWA,SANR;AAOHR,WAAYA,UAPT;AAQHO,MAAOR,MAAMQ,KARV;AASHE,MAAOV,MAAMU,KATV;AAUHK,QAASf,MAAMe,OAVZ;AAWHC,QAAShB,MAAMgB,OAXZ;AAYHC,cAAejB,MAAMiB,aAZlB;AAaHC,QAASlB,MAAMkB,OAbZ;AAcHC,QAASnB,MAAMmB,OAdZ;AAeHhB,OAAQH,MAAMG,MAfX;;;AAkBHiB,UAAWC,KAAKC,GAAL,EAlBR,CAAP;;AAoBH,CA3B0C,CAAlB,EAAzB;;AA6BA,QAASC,oBAAT,CAA6BC,WAA7B,CAA0C;AACtC,GAAMC,gBAAiBhC,iBAAiB+B,YAAYC,cAA7B,CAAvB;AACA,GAAM/B,SAAUD,iBAAiB+B,YAAY9B,OAA7B,CAAhB;;AAEA,GAAMgC,OAAQ;AACVf,YAAa,IADH;AAEVc,6BAFU;AAGVjB,MAAOgB,YAAYhB,KAHT;AAIVE,MAAOc,YAAYd,KAJT;AAKViB,eAAgBH,YAAYG,cAAZ,CAA2BC,IAA3B,CAAgCJ,WAAhC,CALN;AAMVK,yBAA0BL,YAAYK,wBAAZ,CAAqCD,IAArC,CAA0CJ,WAA1C,CANhB;AAOVM,gBAAiBN,YAAYM,eAAZ,CAA4BF,IAA5B,CAAiCJ,WAAjC,CAPP;AAQVrB,OAAQqB,YAAYrB,MARV;;;AAWViB,UAAWC,KAAKC,GAAL,EAXD;AAYV5B,eAZU,CAAd;;;AAeA,GAAI+B,eAAe,CAAf,CAAJ,CAAuB;AACnBC,MAAMzB,UAAN,CAAmBwB,eAAe,CAAf,EAAkBxB,UAArC;AACAyB,MAAMlB,KAAN,CAAciB,eAAe,CAAf,EAAkBjB,KAAhC;AACAkB,MAAMhB,KAAN,CAAce,eAAe,CAAf,EAAkBf,KAAhC;AACAgB,MAAMnB,SAAN,CAAkBkB,eAAe,CAAf,EAAkBlB,SAApC;AACAmB,MAAMjB,SAAN,CAAkBgB,eAAe,CAAf,EAAkBhB,SAApC;AACAiB,MAAMK,aAAN,CAAoB,CAACC,EAAER,YAAYS,OAAf,CAAuBC,EAAEV,YAAYW,OAArC,CAApB;AACH;;AAED,MAAOT,MAAP;AACH;;AAED,QAASU,oBAAT,CAA6BZ,WAA7B,CAA0C;AACtC,GAAM9B,SAAU,CAAE;AACdiB,YAAa,IADC;AAEdC,QAASY,YAAYZ,OAFP;AAGdC,QAASW,YAAYX,OAHP;AAIdC,MAAOU,YAAYV,KAJL;AAKdP,UAAWiB,YAAYZ,OALT;AAMdH,UAAWe,YAAYX,OANT;AAOdZ,WAAY,CAPE;AAQdO,MAAOgB,YAAYhB,KARL;AASdE,MAAOc,YAAYd,KATL;AAUdQ,QAASM,YAAYN,OAVP;AAWdC,QAASK,YAAYL,OAXP;AAYdhB,OAAQqB,YAAYrB,MAZN;AAadiB,UAAWI,YAAYJ,SAAZ,EAAyBC,KAAKC,GAAL,EAbtB,CAAF,CAAhB;;AAeA,MAAO;AACHX,YAAa,IADV;AAEH0B,SAAUb,WAFP;AAGHC,eAAgB/B,OAHb;AAIHO,WAAYP,QAAQ,CAAR,EAAWO,UAJpB;AAKHM,UAAWiB,YAAYS,OALpB;AAMHxB,UAAWe,YAAYW,OANpB;AAOHJ,cAAc,CAACC,EAAER,YAAYS,OAAf,CAAuBC,EAAEV,YAAYW,OAArC,CAPX;AAQH3B,MAAOgB,YAAYhB,KARhB;AASHE,MAAOc,YAAYd,KAThB;AAUHiB,eAAgBH,YAAYG,cAAZ,CAA2BC,IAA3B,CAAgCJ,WAAhC,CAVb;AAWHK,yBAA0BL,YAAYK,wBAAZ,CAAqCD,IAArC,CAA0CJ,WAA1C,CAXvB;AAYHM,gBAAiBN,YAAYM,eAAZ,CAA4BF,IAA5B,CAAiCJ,WAAjC,CAZd;AAaHrB,OAAQqB,YAAYrB,MAbjB;AAcHiB,UAAW1B,QAAQ,CAAR,EAAW0B,SAdnB;AAeH1B,QAAU8B,YAAYc,IAAZ,GAAqB,SAAtB,CAAmC,EAAnC,CAAwC5C,OAf9C,CAAP;;AAiBH;;AAED,QAAS6C,qBAAT,CAA8Bf,WAA9B,CAA2C;AACvC,GAAIA,YAAYb,WAAhB,CAA6B,CAAE,MAAOa,YAAP,CAAqB;AACpD,GAAMgB,WAAYhB,YAAYc,IAAZ,EAAoB,EAAtC;AACA,GAAMG,OAAQD,UAAUE,OAAV,CAAkB,OAAlB,GAA8B,CAA5C;AACA,MAAOD,OAAQL,oBAAoBZ,WAApB,CAAR,CAA2CD,oBAAoBC,WAApB,CAAlD;AACH,C;;AAEce,oB","file":"normalizeNativeEvent.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["import Dimensions from './../../apis/Dimensions/index.web';\r\nvar _cw_scale = Dimensions.get('window').scale;\r\n// Mobile Safari re-uses touch objects, so we copy the properties we want and normalize the identifier\r\nconst normalizeTouches = (touches = []) => Array.prototype.slice.call(touches).map((touch) => {\r\n    const identifier = touch.identifier > 20 ? (touch.identifier % 20) : touch.identifier;\r\n\r\n    const rect = (touch.target && touch.target.getBoundingClientRect&&typeof touch.target.getBoundingClientRect ==\"function\"&& touch.target.getBoundingClientRect())||{left:0,top:0};\r\n    const locationX = (touch.pageX - rect.left)/_cw_scale;\r\n    const locationY = (touch.pageY - rect.top)/_cw_scale;\r\n\r\n    return {\r\n        _normalized: true,\r\n        clientX: touch.clientX,\r\n        clientY: touch.clientY,\r\n        force: touch.force,\r\n        locationX: locationX,\r\n        locationY: locationY,\r\n        identifier: identifier,\r\n        pageX: touch.pageX,\r\n        pageY: touch.pageY,\r\n        radiusX: touch.radiusX,\r\n        radiusY: touch.radiusY,\r\n        rotationAngle: touch.rotationAngle,\r\n        screenX: touch.screenX,\r\n        screenY: touch.screenY,\r\n        target: touch.target,\r\n        // normalize the timestamp\r\n        // https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events\r\n        timestamp: Date.now()\r\n    };\r\n});\r\n\r\nfunction normalizeTouchEvent(nativeEvent) {\r\n    const changedTouches = normalizeTouches(nativeEvent.changedTouches);\r\n    const touches = normalizeTouches(nativeEvent.touches);\r\n\r\n    const event = {\r\n        _normalized: true,\r\n        changedTouches,\r\n        pageX: nativeEvent.pageX,\r\n        pageY: nativeEvent.pageY,\r\n        preventDefault: nativeEvent.preventDefault.bind(nativeEvent),\r\n        stopImmediatePropagation: nativeEvent.stopImmediatePropagation.bind(nativeEvent),\r\n        stopPropagation: nativeEvent.stopPropagation.bind(nativeEvent),\r\n        target: nativeEvent.target,\r\n        // normalize the timestamp\r\n        // https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events\r\n        timestamp: Date.now(),\r\n        touches\r\n    };\r\n\r\n    if (changedTouches[0]) {\r\n        event.identifier = changedTouches[0].identifier;\r\n        event.pageX = changedTouches[0].pageX;\r\n        event.pageY = changedTouches[0].pageY;\r\n        event.locationX = changedTouches[0].locationX;\r\n        event.locationY = changedTouches[0].locationY;\r\n        event.contentOffset={x:nativeEvent.offsetX,y:nativeEvent.offsetY}\r\n    }\r\n\r\n    return event;\r\n}\r\n\r\nfunction normalizeMouseEvent(nativeEvent) {\r\n    const touches = [ {\r\n        _normalized: true,\r\n        clientX: nativeEvent.clientX,\r\n        clientY: nativeEvent.clientY,\r\n        force: nativeEvent.force,\r\n        locationX: nativeEvent.clientX,\r\n        locationY: nativeEvent.clientY,\r\n        identifier: 0,\r\n        pageX: nativeEvent.pageX,\r\n        pageY: nativeEvent.pageY,\r\n        screenX: nativeEvent.screenX,\r\n        screenY: nativeEvent.screenY,\r\n        target: nativeEvent.target,\r\n        timestamp: nativeEvent.timestamp || Date.now()\r\n    } ];\r\n    return {\r\n        _normalized: true,\r\n        domEvent: nativeEvent,\r\n        changedTouches: touches,\r\n        identifier: touches[0].identifier,\r\n        locationX: nativeEvent.offsetX,\r\n        locationY: nativeEvent.offsetY,\r\n        contentOffset:{x:nativeEvent.offsetX,y:nativeEvent.offsetY},\r\n        pageX: nativeEvent.pageX,\r\n        pageY: nativeEvent.pageY,\r\n        preventDefault: nativeEvent.preventDefault.bind(nativeEvent),\r\n        stopImmediatePropagation: nativeEvent.stopImmediatePropagation.bind(nativeEvent),\r\n        stopPropagation: nativeEvent.stopPropagation.bind(nativeEvent),\r\n        target: nativeEvent.target,\r\n        timestamp: touches[0].timestamp,\r\n        touches: (nativeEvent.type === 'mouseup') ? [] : touches\r\n    };\r\n}\r\n\r\nfunction normalizeNativeEvent(nativeEvent) {\r\n    if (nativeEvent._normalized) { return nativeEvent; }\r\n    const eventType = nativeEvent.type || '';\r\n    const mouse = eventType.indexOf('mouse') >= 0;\r\n    return mouse ? normalizeMouseEvent(nativeEvent) : normalizeTouchEvent(nativeEvent);\r\n}\r\n\r\nexport default normalizeNativeEvent;\r\n"]}