{"version":3,"sources":["node_modules/@ctrip/crnweb/src/crn/lib/Navigation.js"],"names":["Navigation","app","pages","filter","page","isInitialPage","navigator","getCurrentRoutes","arguments","routes","length","pageName","params","queryStringObj","global","cw_routeMapConfig","route","name","push","pop","replace","index","cb","replaceAtIndex","replacePrevious","popToTop","popToRoute"],"mappings":"AAAA,a;;;;AAIMA,U;AACF,oBAAYC,GAAZ,CAAiB;AACb,KAAKA,GAAL,CAAWA,GAAX;AACH,C;;AAEa;AACV,MAAQ,MAAKA,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,SAACC,IAAD,CAAU,CAAC,MAAOA,MAAKC,aAAZ,CAA0B,CAA3D,CAAD,CAA+D,CAA/D,CAAP;AACH,C;;AAEkB;AACf,MAAO,iBAAKC,SAAL,EAAeC,gBAAf,kBAAmCC,SAAnC,CAAP;AACH,C;;AAEiB;AACd,GAAIC,QAAS,KAAKF,gBAAL,EAAb;AACA,MAAOE,QAAOA,OAAOC,MAAP,CAAgB,CAAvB,CAAP;AACH,C;;AAEIC,Q,CAAyC,IAA/BC,OAA+B,2DAAtB,EAAsB,IAAnBC,eAAmB,2DAAJ,EAAI;AAC1C,GAAGC,OAAOC,iBAAV,CAA4B;AACxB,GAAGD,OAAOC,iBAAP,CAAyBJ,QAAzB,CAAH,CAAsC;AAClCA,SAASG,OAAOC,iBAAP,CAAyBJ,QAAzB,CAAT;AACH;AACJ;AACD,GAAIK,OAAS,KAAKf,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,SAACC,IAAD,CAAU,CAAC,MAAOO,WAAYP,KAAKa,IAAxB,CAA6B,CAA9D,CAAD,CAAkE,CAAlE,GAAsE,EAAlF;AACAD,MAAMJ,MAAN,CAAeA,MAAf;AACAI,MAAMH,cAAN,CAAqBA,cAArB;AACA,MAAO,MAAKP,SAAL,CAAeY,IAAf,CAAoBF,KAApB,CAAP;AACH,C;;AAEY;AACL,MAAO,kBAAKV,SAAL,EAAea,GAAf,6BAAP;AACP,C;;AAEOR,Q,CAASC,M,CAAQ;AACrB,KAAKN,SAAL,CAAec,OAAf,CAAuBT,QAAvB,CAAgCC,MAAhC;AACH,C;AACcD,Q,CAASU,K,CAAMC,E,CAAGV,M,CAAQ;AACrC,KAAKN,SAAL,CAAeiB,cAAf,CAA8BZ,QAA9B,CAAuCU,KAAvC,CAA6CC,EAA7C,CAAgDV,MAAhD;AACH,C;;AAEeD,Q,CAASC,M,CAAQ;AAC7B,KAAKN,SAAL,CAAekB,eAAf,CAA+Bb,QAA/B,CAAwCC,MAAxC;AACH,C;AACU;AACP,KAAKN,SAAL,CAAemB,QAAf;AACH,C;;AAEUT,K,CAAO;AACd,KAAKV,SAAL,CAAeoB,UAAf,CAA0BV,KAA1B;AACH,C;;;AAGUhB,U","file":"Navigation.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["\"use strict\";\r\n\r\nimport {Platform} from 'react-native';\r\n\r\nclass Navigation {\r\n    constructor(app) {\r\n        this.app = app;\r\n    }\r\n\r\n    initialPage() {\r\n        return (this.app.pages.filter((page) => {return page.isInitialPage}))[0];\r\n    }\r\n\r\n    getCurrentRoutes() {\r\n        return this.navigator.getCurrentRoutes(...arguments);\r\n    }\r\n\r\n    getCurrentRoute() {\r\n        let routes = this.getCurrentRoutes();\r\n        return routes[routes.length - 1];\r\n    }\r\n\r\n    push(pageName, params = {},queryStringObj={}) {\r\n        if(global.cw_routeMapConfig){\r\n            if(global.cw_routeMapConfig[pageName]){\r\n                pageName=global.cw_routeMapConfig[pageName];\r\n            }\r\n        }\r\n        let route = (this.app.pages.filter((page) => {return pageName == page.name}))[0]||{};\r\n        route.params = params;\r\n        route.queryStringObj=queryStringObj;\r\n        return this.navigator.push(route);\r\n    }\r\n\r\n    pop(...args) {\r\n            return this.navigator.pop(...args);\r\n    }\r\n\r\n    replace(pageName,params) {\r\n        this.navigator.replace(pageName,params);\r\n    }\r\n    replaceAtIndex(pageName,index,cb,params) {\r\n        this.navigator.replaceAtIndex(pageName,index,cb,params);\r\n    }\r\n\r\n    replacePrevious(pageName,params) {\r\n        this.navigator.replacePrevious(pageName,params);\r\n    }\r\n    popToTop() {\r\n        this.navigator.popToTop();\r\n    }\r\n\r\n    popToRoute(route) {\r\n        this.navigator.popToRoute(route);\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n"]}