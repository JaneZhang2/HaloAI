{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/apis/Easing/vendor/bezier.js"],"names":["module","exports","x1","y1","x2","y2","epsilon","curveX","t","v","curveY","derivativeCurveX","x","t0","t1","t2","d2","i","Math","abs"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,CAAiB,SAASC,EAAT,CAAaC,EAAb,CAAiBC,EAAjB,CAAqBC,EAArB,CAAyBC,OAAzB,CAAiC;;AAEhD,GAAIC,QAAS,SAASC,CAAT,CAAW;AACtB,GAAIC,GAAI,EAAID,CAAZ;AACA,MAAO,GAAIC,CAAJ,CAAQA,CAAR,CAAYD,CAAZ,CAAgBN,EAAhB,CAAqB,EAAIO,CAAJ,CAAQD,CAAR,CAAYA,CAAZ,CAAgBJ,EAArC,CAA0CI,EAAIA,CAAJ,CAAQA,CAAzD;AACD,CAHD;;AAKA,GAAIE,QAAS,SAASF,CAAT,CAAW;AACtB,GAAIC,GAAI,EAAID,CAAZ;AACA,MAAO,GAAIC,CAAJ,CAAQA,CAAR,CAAYD,CAAZ,CAAgBL,EAAhB,CAAqB,EAAIM,CAAJ,CAAQD,CAAR,CAAYA,CAAZ,CAAgBH,EAArC,CAA0CG,EAAIA,CAAJ,CAAQA,CAAzD;AACD,CAHD;;AAKA,GAAIG,kBAAmB,SAASH,CAAT,CAAW;AAChC,GAAIC,GAAI,EAAID,CAAZ;AACA,MAAO,IAAK,GAAKA,EAAI,CAAT,EAAcA,CAAd,CAAkBC,EAAIA,CAA3B,EAAgCP,EAAhC,CAAqC,GAAK,CAAEM,CAAF,CAAMA,CAAN,CAAUA,CAAV,CAAc,EAAIC,CAAJ,CAAQD,CAA3B,EAAgCJ,EAA5E;AACD,CAHD;;AAKA,MAAO,UAASI,CAAT,CAAW;;AAEhB,GAAII,GAAIJ,CAAR,CAAWK,EAAX,CAAeC,EAAf,CAAmBC,EAAnB,CAAuBX,EAAvB,CAA2BY,EAA3B,CAA+BC,CAA/B;;;AAGA,IAAKF,GAAKH,CAAL,CAAQK,EAAI,CAAjB,CAAoBA,EAAI,CAAxB,CAA2BA,GAA3B,CAA+B;AAC7Bb,GAAKG,OAAOQ,EAAP,EAAaH,CAAlB;AACA,GAAIM,KAAKC,GAAL,CAASf,EAAT,EAAeE,OAAnB,CAA4B,MAAOI,QAAOK,EAAP,CAAP;AAC5BC,GAAKL,iBAAiBI,EAAjB,CAAL;AACA,GAAIG,KAAKC,GAAL,CAASH,EAAT,EAAe,IAAnB,CAAyB;AACzBD,GAAKA,GAAKX,GAAKY,EAAf;AACD;;AAEDH,GAAK,CAAL,CAAQC,GAAK,CAAb,CAAgBC,GAAKH,CAArB;;AAEA,GAAIG,GAAKF,EAAT,CAAa,MAAOH,QAAOG,EAAP,CAAP;AACb,GAAIE,GAAKD,EAAT,CAAa,MAAOJ,QAAOI,EAAP,CAAP;;;AAGb,MAAOD,GAAKC,EAAZ,CAAe;AACbV,GAAKG,OAAOQ,EAAP,CAAL;AACA,GAAIG,KAAKC,GAAL,CAASf,GAAKQ,CAAd,EAAmBN,OAAvB,CAAgC,MAAOI,QAAOK,EAAP,CAAP;AAChC,GAAIH,EAAIR,EAAR,CAAYS,GAAKE,EAAL,CAAZ;AACKD,GAAKC,EAAL;AACLA,GAAK,CAACD,GAAKD,EAAN,EAAY,EAAZ,CAAiBA,EAAtB;AACD;;;AAGD,MAAOH,QAAOK,EAAP,CAAP;;AAED,CA9BD;;AAgCD,CAjDD","file":"bezier.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["'use strict';\r\n\r\nmodule.exports = function(x1, y1, x2, y2, epsilon){\r\n\r\n  var curveX = function(t){\r\n    var v = 1 - t;\r\n    return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;\r\n  };\r\n\r\n  var curveY = function(t){\r\n    var v = 1 - t;\r\n    return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;\r\n  };\r\n\r\n  var derivativeCurveX = function(t){\r\n    var v = 1 - t;\r\n    return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (- t * t * t + 2 * v * t) * x2;\r\n  };\r\n\r\n  return function(t){\r\n\r\n    var x = t, t0, t1, t2, x2, d2, i;\r\n\r\n    // First try a few iterations of Newton's method -- normally very fast.\r\n    for (t2 = x, i = 0; i < 8; i++){\r\n      x2 = curveX(t2) - x;\r\n      if (Math.abs(x2) < epsilon) return curveY(t2);\r\n      d2 = derivativeCurveX(t2);\r\n      if (Math.abs(d2) < 1e-6) break;\r\n      t2 = t2 - x2 / d2;\r\n    }\r\n\r\n    t0 = 0, t1 = 1, t2 = x;\r\n\r\n    if (t2 < t0) return curveY(t0);\r\n    if (t2 > t1) return curveY(t1);\r\n\r\n    // Fallback to the bisection method for reliability.\r\n    while (t0 < t1){\r\n      x2 = curveX(t2);\r\n      if (Math.abs(x2 - x) < epsilon) return curveY(t2);\r\n      if (x > x2) t0 = t2;\r\n      else t1 = t2;\r\n      t2 = (t1 - t0) * .5 + t0;\r\n    }\r\n\r\n    // Failure\r\n    return curveY(t2);\r\n\r\n  };\r\n\r\n};"]}