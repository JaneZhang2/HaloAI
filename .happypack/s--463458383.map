{"version":3,"sources":["node_modules/@ctrip/crnweb/src/crn/lib/Button.js"],"names":["AbstractButton","Component","defaultProps","style","backgroundColor","overflow","textStyle","color","alignSelf","fontSize","ImageButton","props","imageStyle","width","height","otherStyle","imageInset","top","right","bottom","left","imgStyle","marginTop","marginRight","marginBottom","marginLeft","tintColor","disabled","onPress","imageSource","TextButton","children","StyleSheet","fix","MixButton","Button"],"mappings":";AACA,a;;AAEA,4B;;;;AAIMA,c,iSAAuBC,gB;AAClBC,Y,CAAe;AAClBC,MAAO;AACHC,gBAAgB,aADb;AAEHC,SAAS,QAFN,CADW;;AAKlBC,UAAU;AACNC,MAAM,OADA;AAENC,UAAU,QAFJ;AAGNC,SAAS,EAHH;AAINL,gBAAgB,aAJV,CALQ,C;;;;;AAcpBM,W;AACO;AACgC,KAAKC,KAAL,CAAWC,UAAX,EAAyB,CAACC,MAAM,CAAP,CAAUC,OAAO,CAAjB,CADzD,CACAD,KADA,MACAA,KADA,CACOC,MADP,MACOA,MADP,CACkBC,UADlB;AAE4B,KAAKJ,KAAL,CAAWK,UAAX,EAAyB,CAACC,IAAI,CAAL,CAAQC,MAAM,CAAd,CAAiBC,OAAO,CAAxB,CAA2BC,KAAK,CAAhC,CAFrD,CAEAH,GAFA,OAEAA,GAFA,CAEKC,KAFL,OAEKA,KAFL,CAEYC,MAFZ,OAEYA,MAFZ,CAEoBC,IAFpB,OAEoBA,IAFpB;AAGL,GAAIC,oBAAUR,WAAV,CAAiBC,aAAjB,CAAyBQ,UAAUL,GAAnC,CAAwCM,YAAYL,KAApD,CAA2DM,aAAaL,MAAxE,CAAgFM,WAAWL,IAA3F,CAAiGhB,gBAAgB,aAAjH,EAAmIW,UAAnI,CAAJ;AACA,GAAG,KAAKJ,KAAL,CAAWe,SAAd,CAAwB;AACpBL,SAASK,SAAT,CAAqB,KAAKf,KAAL,CAAWe,SAAhC;AACH;AACD;AACI,8BAAC,0BAAD,EAAkB,SAAU,KAAKf,KAAL,CAAWgB,QAAvC,CAAiD,QAAW,KAAKhB,KAAL,CAAWiB,OAAvE,CAAgF,MAAS,KAAKjB,KAAL,CAAWR,KAApG;AACI,8BAAC,eAAD;AACI,OAAU,KAAKQ,KAAL,CAAWkB,WADzB;AAEI,MAASR,QAFb,EADJ,CADJ;;;;;AASH,C,yBAjBqBrB,c;;;AAoBpB8B,U;AACO;AACmB,KAAKnB,KADxB,CACAoB,QADA,QACAA,QADA,CACYpB,KADZ;AAEL,GAAIR,OAAQ6B,qBAAWC,GAAX,CAAetB,MAAMR,KAArB,CAA4BQ,KAA5B,CAAZ;AACA;AACI,8BAAC,0BAAD,EAAkB,SAAU,KAAKA,KAAL,CAAWgB,QAAvC,CAAiD,QAAW,KAAKhB,KAAL,CAAWiB,OAAvE,CAAgF,MAASzB,KAAzF;AACI,8BAAC,cAAD,EAAM,MAAS,KAAKQ,KAAL,CAAWL,SAA1B,EAAsC,KAAKK,KAAL,CAAWoB,QAAjD,CADJ,CADJ;;;AAKH,C,wBAToB/B,c;;;AAYnBkC,S;AACO;AACL;AACI,8BAAC,WAAD,aAAiB,KAAKvB,KAAtB,EAA6B,YAAe,KAAKA,KAAL,CAAWkB,WAAvD,GADJ;;;AAIH,C,uBANmB7B,c;;;AASlBmC,M;AACO;AACL,GAAI,KAAKxB,KAAL,CAAWkB,WAAX,EAA0B,KAAKlB,KAAL,CAAWoB,QAAzC,CAAmD;AAC/C,MAAO,+BAAC,SAAD,aAAe,KAAKpB,KAApB,EAA2B,WAAc,CAACE,MAAM,KAAKF,KAAL,CAAWkB,WAAX,CAAuBhB,KAAvB,EAAgC,CAAvC,CAA0CC,OAAO,KAAKH,KAAL,CAAWkB,WAAX,CAAuBf,MAAvB,EAAiC,CAAlF,CAAzC,GAAP;AACH,CAFD,IAEO,IAAI,KAAKH,KAAL,CAAWkB,WAAf,CAA4B;AAC/B,MAAO,+BAAC,WAAD,CAAiB,KAAKlB,KAAtB,CAAP;AACH,CAFM,IAEA;AACH,MAAO,+BAAC,UAAD,CAAgB,KAAKA,KAArB,CAAP;AACH;AACJ,C,oBATgBV,gB;;;;AAaNkC,M;AACPzB,W,CAAAA,W,SAAYoB,U,CAAAA,U","file":"Button.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["\r\n'use strict';\r\n\r\nimport React, {Component} from 'react';\r\nimport {Text, TouchableOpacity, Image,StyleSheet} from 'react-native';\r\n\r\n\r\nclass AbstractButton extends Component {\r\n    static defaultProps = {\r\n        style: {\r\n            backgroundColor:'transparent',\r\n            overflow:'hidden'\r\n        },\r\n        textStyle:{\r\n            color:'white',\r\n            alignSelf:'center',\r\n            fontSize:15,\r\n            backgroundColor:'transparent'\r\n        }\r\n    }\r\n}\r\n\r\nclass ImageButton extends AbstractButton {\r\n    render() {\r\n        let {width, height, ...otherStyle} = this.props.imageStyle || {width:0, height:0};\r\n        let {top, right, bottom, left} = this.props.imageInset || {top:0, right:0, bottom:0, left:0};\r\n        let imgStyle={width, height, marginTop:top, marginRight:right, marginBottom:bottom, marginLeft:left, backgroundColor:'transparent', ...otherStyle};\r\n        if(this.props.tintColor){\r\n            imgStyle.tintColor = this.props.tintColor;\r\n        }\r\n        return (\r\n            <TouchableOpacity disabled={this.props.disabled} onPress = {this.props.onPress} style = {this.props.style}>\r\n                <Image\r\n                    source = {this.props.imageSource}\r\n                    style = {imgStyle}\r\n                >\r\n                </Image>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nclass TextButton extends AbstractButton {\r\n    render() {\r\n        let {children,...props}=this.props;\r\n        let style = StyleSheet.fix(props.style, props);\r\n        return (\r\n            <TouchableOpacity disabled={this.props.disabled} onPress = {this.props.onPress} style = {style}>\r\n                <Text style = {this.props.textStyle}>{this.props.children}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nclass MixButton extends AbstractButton {\r\n    render() {\r\n        return (\r\n            <ImageButton {...this.props} imageSource = {this.props.imageSource} >\r\n            </ImageButton>\r\n        );\r\n    }\r\n}\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        if (this.props.imageSource && this.props.children) {\r\n            return <MixButton {...this.props} imageStyle = {{width:this.props.imageSource.width || 0, height:this.props.imageSource.height || 0}}/>\r\n        } else if (this.props.imageSource) {\r\n            return <ImageButton {...this.props}/>\r\n        } else {\r\n            return <TextButton {...this.props}/>\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Button\r\nexport {ImageButton,TextButton}\r\n"]}