{"version":3,"sources":["../../.npm-global/lib/node_modules/@ctrip/cw/node_modules/ansi-html/index.js"],"names":["module","exports","ansiHTML","_regANSI","_defColors","reset","black","red","green","yellow","blue","magenta","cyan","lightgrey","darkgrey","_styles","_openTags","_closeTags","forEach","n","text","test","ansiCodes","ret","replace","match","seq","ot","indexOf","pop","push","ct","l","length","Array","join","setColors","colors","Error","_finalColors","hex","defHexColor","key","hasOwnProperty","isArray","some","h","slice","_setTags","tags","Object","defineProperty","get","open","close","color","oriColor","code","parseInt","toString"],"mappings":"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","file":"index.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n"]}