{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/setValueForStyles.js"],"names":["setValueForStyles","node","styles","component","style","styleValue","styleName","hasOwnProperty","styleFloatAccessor"],"mappings":";;;;;;;;;;;;;AAaA,0D;;;;;;;;;;AAUA,GAAMA,mBAAoB,SAASC,IAAT,CAAeC,MAAf,CAAuBC,SAAvB,CAAkC;AACxD,GAAIC,OAAQH,KAAKG,KAAjB;;;;;AAKQC,UALR,CACA,IAAK,GAAIC,UAAT,GAAsBJ,OAAtB,CAA8B,CAC1B,GAAI,CAACA,OAAOK,cAAP,CAAsBD,SAAtB,CAAL,CAAuC,CACnC,SACH,CACGD,UAJsB,CAIT,kCAAoBC,SAApB,CAA+BJ,OAAOI,SAAP,CAA/B,CAAkDH,SAAlD,CAJS;AAK1B,GAAIG,YAAc,OAAd,EAAyBA,YAAc,UAA3C,CAAuD;AACnDA,UAAYE,kBAAZ;AACH;AACD,GAAIH,UAAJ,CAAgB;AACZD,MAAME,SAAN,EAAmBD,UAAnB;AACH,CAFD,IAEO;AACHD,MAAME,SAAN,EAAmB,EAAnB;AACH;AACJ;AACJ,CAhBD,C;;AAkBeN,iB","file":"setValueForStyles.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/* eslint-disable */\r\n\r\n/**\r\n * Copyright 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * From React 16.0.0\r\n */\r\n\r\nimport dangerousStyleValue from './dangerousStyleValue';\r\n\r\n/**\r\n * Sets the value for multiple styles on a node.  If a value is specified as\r\n * '' (empty string), the corresponding style property will be unset.\r\n *\r\n * @param {DOMElement} node\r\n * @param {object} styles\r\n * @param {ReactDOMComponent} component\r\n */\r\nconst setValueForStyles = function(node, styles, component) {\r\n    var style = node.style;\r\n    for (var styleName in styles) {\r\n        if (!styles.hasOwnProperty(styleName)) {\r\n            continue;\r\n        }\r\n        var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\r\n        if (styleName === 'float' || styleName === 'cssFloat') {\r\n            styleName = styleFloatAccessor;\r\n        }\r\n        if (styleValue) {\r\n            style[styleName] = styleValue;\r\n        } else {\r\n            style[styleName] = '';\r\n        }\r\n    }\r\n};\r\n\r\nexport default setValueForStyles;\r\n"]}