{"version":3,"sources":["../../.npm-global/lib/node_modules/@ctrip/cw/node_modules/fbjs/lib/warning.js"],"names":["emptyFunction","require","warning","process","env","NODE_ENV","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","error","Error","x","condition","_len2","_key2","undefined","indexOf","apply","concat","module","exports"],"mappings":";;;;;;;;AAQA;;AAEA,GAAIA,eAAgBC,QAAQ,iBAAR,CAApB;;;;;;;;;AASA,GAAIC,SAAUF,aAAd;;AAEA,GAAIG,QAAQC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C;AACzC,GAAIC,cAAe,SAAsBC,MAAtB,CAA8B;AAC/C,IAASC,IAAT,CAAgBC,UAAUC,MAA1B,CAAkCC,IAAlC,CAAyCC,MAAMJ,KAAO,CAAP,CAAWA,KAAO,CAAlB,CAAsB,CAA5B,CAAzC,CAAyEK,IAAzE,CAAgF,CAAhF,CAAmFA,KAAOL,IAA1F,CAAgGK,MAAhG,CAAwG;AACtGF,KAAKE,KAAO,CAAZ,EAAiBJ,UAAUI,IAAV,CAAjB;AACD;;AAED,GAAIC,UAAW,CAAf,CAJSN,IAIT,CAJkCG,IAIlC,CAJyEE,IAIzE;AACA,GAAIE,SAAU,YAAcR,OAAOS,OAAP,CAAe,KAAf,CAAsB,UAAY;AAC5D,MAAOL,MAAKG,UAAL,CAAP;AACD,CAF2B,CAA5B;AAGA,GAAI,MAAOG,QAAP,GAAmB,WAAvB,CAAoC;AAClCA,QAAQC,KAAR,CAAcH,OAAd;AACD;AACD,GAAI;;;;AAIF,KAAM,IAAII,MAAJ,CAAUJ,OAAV,CAAN;AACD,CAAC,MAAOK,CAAP,CAAU,CAAE;AACf,CAlBD;;AAoBAlB,QAAU,SAAiBmB,SAAjB,CAA4Bd,MAA5B,CAAoC;;;;;;;;;;AAUjCe,KAViC,CAUPX,IAVO,CAUkCY,KAVlC,CAC5C,GAAIhB,SAAWiB,SAAf,CAA0B,CACxB,KAAM,IAAIL,MAAJ,CAAU,4DAA8D,kBAAxE,CAAN,CACD,CAED,GAAIZ,OAAOkB,OAAP,CAAe,6BAAf,IAAkD,CAAtD,CAAyD,CACvD,OACD,CAED,GAAI,CAACJ,SAAL,CAAgB,CACd,IAASC,KAAT,CAAiBb,UAAUC,MAA3B,CAAmCC,IAAnC,CAA0CC,MAAMU,MAAQ,CAAR,CAAYA,MAAQ,CAApB,CAAwB,CAA9B,CAA1C,CAA4EC,KAA5E,CAAoF,CAApF,CAAuFA,MAAQD,KAA/F,CAAsGC,OAAtG,CAA+G;AAC7GZ,KAAKY,MAAQ,CAAb,EAAkBd,UAAUc,KAAV,CAAlB;AACD;;AAEDjB,aAAaoB,KAAb,CAAmBF,SAAnB,CAA8B,CAACjB,MAAD,EAASoB,MAAT,CAAgBhB,IAAhB,CAA9B;AACD;AACF,CAhBD;AAiBD;;AAEDiB,OAAOC,OAAP,CAAiB3B,OAAjB","file":"warning.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;"]}