{"version":3,"sources":["../../.npm-global/lib/node_modules/@ctrip/cw/node_modules/fastdom/fastdom.js"],"names":["win","debug","raf","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","FastDom","self","reads","writes","bind","prototype","constructor","measure","fn","ctx","task","push","scheduleFlush","mutate","clear","remove","extend","props","Error","child","Object","create","mixin","fastdom","initialize","catch","scheduled","flush","error","length","runTasks","e","message","tasks","shift","array","item","index","indexOf","splice","target","source","key","hasOwnProperty","exports","define","module","window"],"mappings":"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","file":"fastdom.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["!(function(win) {\n\n/**\n * FastDom\n *\n * Eliminates layout thrashing\n * by batching DOM read/write\n * interactions.\n *\n * @author Wilson Page <wilsonpage@me.com>\n * @author Kornel Lesinski <kornel.lesinski@ft.com>\n */\n\n'use strict';\n\n/**\n * Mini logger\n *\n * @return {Function}\n */\nvar debug = 0 ? console.log.bind(console, '[fastdom]') : function() {};\n\n/**\n * Normalized rAF\n *\n * @type {Function}\n */\nvar raf = win.requestAnimationFrame\n  || win.webkitRequestAnimationFrame\n  || win.mozRequestAnimationFrame\n  || win.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16); };\n\n/**\n * Initialize a `FastDom`.\n *\n * @constructor\n */\nfunction FastDom() {\n  var self = this;\n  self.reads = [];\n  self.writes = [];\n  self.raf = raf.bind(win); // test hook\n  debug('initialized', self);\n}\n\nFastDom.prototype = {\n  constructor: FastDom,\n\n  /**\n   * Adds a job to the read batch and\n   * schedules a new frame if need be.\n   *\n   * @param  {Function} fn\n   * @param  {Object} ctx the context to be bound to `fn` (optional).\n   * @public\n   */\n  measure: function(fn, ctx) {\n    debug('measure');\n    var task = !ctx ? fn : fn.bind(ctx);\n    this.reads.push(task);\n    scheduleFlush(this);\n    return task;\n  },\n\n  /**\n   * Adds a job to the\n   * write batch and schedules\n   * a new frame if need be.\n   *\n   * @param  {Function} fn\n   * @param  {Object} ctx the context to be bound to `fn` (optional).\n   * @public\n   */\n  mutate: function(fn, ctx) {\n    debug('mutate');\n    var task = !ctx ? fn : fn.bind(ctx);\n    this.writes.push(task);\n    scheduleFlush(this);\n    return task;\n  },\n\n  /**\n   * Clears a scheduled 'read' or 'write' task.\n   *\n   * @param {Object} task\n   * @return {Boolean} success\n   * @public\n   */\n  clear: function(task) {\n    debug('clear', task);\n    return remove(this.reads, task) || remove(this.writes, task);\n  },\n\n  /**\n   * Extend this FastDom with some\n   * custom functionality.\n   *\n   * Because fastdom must *always* be a\n   * singleton, we're actually extending\n   * the fastdom instance. This means tasks\n   * scheduled by an extension still enter\n   * fastdom's global task queue.\n   *\n   * The 'super' instance can be accessed\n   * from `this.fastdom`.\n   *\n   * @example\n   *\n   * var myFastdom = fastdom.extend({\n   *   initialize: function() {\n   *     // runs on creation\n   *   },\n   *\n   *   // override a method\n   *   measure: function(fn) {\n   *     // do extra stuff ...\n   *\n   *     // then call the original\n   *     return this.fastdom.measure(fn);\n   *   },\n   *\n   *   ...\n   * });\n   *\n   * @param  {Object} props  properties to mixin\n   * @return {FastDom}\n   */\n  extend: function(props) {\n    debug('extend', props);\n    if (typeof props != 'object') throw new Error('expected object');\n\n    var child = Object.create(this);\n    mixin(child, props);\n    child.fastdom = this;\n\n    // run optional creation hook\n    if (child.initialize) child.initialize();\n\n    return child;\n  },\n\n  // override this with a function\n  // to prevent Errors in console\n  // when tasks throw\n  catch: null\n};\n\n/**\n * Schedules a new read/write\n * batch if one isn't pending.\n *\n * @private\n */\nfunction scheduleFlush(fastdom) {\n  if (!fastdom.scheduled) {\n    fastdom.scheduled = true;\n    fastdom.raf(flush.bind(null, fastdom));\n    debug('flush scheduled');\n  }\n}\n\n/**\n * Runs queued `read` and `write` tasks.\n *\n * Errors are caught and thrown by default.\n * If a `.catch` function has been defined\n * it is called instead.\n *\n * @private\n */\nfunction flush(fastdom) {\n  debug('flush');\n\n  var writes = fastdom.writes;\n  var reads = fastdom.reads;\n  var error;\n\n  try {\n    debug('flushing reads', reads.length);\n    runTasks(reads);\n    debug('flushing writes', writes.length);\n    runTasks(writes);\n  } catch (e) { error = e; }\n\n  fastdom.scheduled = false;\n\n  // If the batch errored we may still have tasks queued\n  if (reads.length || writes.length) scheduleFlush(fastdom);\n\n  if (error) {\n    debug('task errored', error.message);\n    if (fastdom.catch) fastdom.catch(error);\n    else throw error;\n  }\n}\n\n/**\n * We run this inside a try catch\n * so that if any jobs error, we\n * are able to recover and continue\n * to flush the batch until it's empty.\n *\n * @private\n */\nfunction runTasks(tasks) {\n  debug('run tasks');\n  var task; while (task = tasks.shift()) task();\n}\n\n/**\n * Remove an item from an Array.\n *\n * @param  {Array} array\n * @param  {*} item\n * @return {Boolean}\n */\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n  return !!~index && !!array.splice(index, 1);\n}\n\n/**\n * Mixin own properties of source\n * object into the target.\n *\n * @param  {Object} target\n * @param  {Object} source\n */\nfunction mixin(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key];\n  }\n}\n\n// There should never be more than\n// one instance of `FastDom` in an app\nvar exports = win.fastdom = (win.fastdom || new FastDom()); // jshint ignore:line\n\n// Expose to CJS & AMD\nif ((typeof define) == 'function') define(function() { return exports; });\nelse if ((typeof module) == 'object') module.exports = exports;\n\n})( typeof window !== 'undefined' ? window : this);\n"]}