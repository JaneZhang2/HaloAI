{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/components/View/View.web.js"],"names":["View","props","state","children","style","StyleSheet","fix","className","indexOf","replace","pointerEvents","normalLayout","Component","defaultProps","displayName"],"mappings":";AACA,4B;AACA,sE;AACA,kE;AACA,8E;;;;;;;;;;;;;AAaMA,I;AACF,cAAYC,KAAZ,CAAkB;AACRA,KADQ;AAEd,MAAKC,KAAL,CAAW,EAAX,CAFc;AAGjB,C;;;;AAIS;;;;;;AAMQ,KAAKD,KANb,CAGDE,QAHC,QAGDA,QAHC,CAMCF,KAND;AAONA,MAAMG,KAAN,CAAcC,qBAAWC,GAAX,CAAeL,MAAMG,KAArB,CAA4BH,KAA5B,CAAd;;AAEA,GAAI,CAACA,MAAMM,SAAP,EAAoBN,MAAMM,SAAN,CAAgBC,OAAhB,CAAwB,WAAxB,IAAyC,CAAC,CAAlE,CAAoE;AAChEP,MAAMM,SAAN,CAAkBN,MAAMM,SAAN,CAAmBN,MAAMM,SAAN,CAAgBE,OAAhB,CAAwB,gBAAxB,CAA0C,EAA1C,EAAgD,UAAnE,CAAiF,SAAnG;AACH;AACD,GAAIR,MAAMS,aAAV,CAAwB;AACpBT,MAAMM,SAAN,CAAkBN,MAAMM,SAAN,CAAkB,kBAAlB,CAAuCN,MAAMS,aAA/D;AACH;;AAED,GAAIC,cAAc,oCAASV,KAAT,CAAiBE,QAAjB,CAAlB;;AAEA,MAAOQ,aAAP;AACH,C,kBA3BcC,gB,SAKRC,Y,CAAe,CAClBT,MAAO,EADW,C;;;;;AA2B1BJ,KAAO,oBAAcA,IAAd,CAAP;AACAA,KAAO,oBAAqBA,IAArB,CAAP;AACAA,KAAKc,WAAL,CAAiB,MAAjB,C;AACed,I","file":"View.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["\r\nimport React,{Component} from 'react';\r\nimport LayoutWrapper from './../../modules/wrapper/LayoutWrapper/index.web'\r\nimport StyleSheet from './../../apis/StyleSheet/StyleSheet.web';\r\nimport NativeMethodsWrapper from \"./../../modules/wrapper/NativeMethodsWrapper/index.web\"\r\n\r\n/**\r\n * View组件\r\n *\r\n * @component View\r\n * @example ./View.js[1-34]\r\n * @version >=v1.4.0\r\n * @description  View是一个支持Flexbox布局、样式、一些触摸处理、和一些无障碍功能的容器，并且它可以放到其它的视图里，也可以有任意多个任意类型的子视图。View是创建UI时最基础的组件，\r\n *\r\n * ![View](./images/component/View.gif)\r\n *\r\n */\r\nclass View extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    static defaultProps = {\r\n        style: {}\r\n    }\r\n    render () {\r\n\r\n\r\n        let {children,\r\n            // accessibilityLabel,testID,accessibilityRole,hitSlop,onLayout,\r\n            // onStartShouldSetResponder,onResponderTerminationRequest,onResponderGrant,onResponderMove,onResponderRelease,onResponderTerminate,\r\n            ...props}=this.props;\r\n        props.style = StyleSheet.fix(props.style, props);\r\n\r\n        if (!props.className || props.className.indexOf('noflexbox') === -1){\r\n            props.className = props.className ? (props.className.replace(/[\\s]*rn\\-view/g, '') + ' rn-view') : 'rn-view';\r\n        }\r\n        if (props.pointerEvents){\r\n            props.className = props.className + ' pointer-events-' + props.pointerEvents;\r\n        }\r\n\r\n        let normalLayout=(<div {...props}>{children}</div>);\r\n\r\n        return normalLayout;\r\n    }\r\n}\r\n\r\n\r\nView.propTypes = {};\r\nView = LayoutWrapper(View);\r\nView = NativeMethodsWrapper(View);\r\nView.displayName=\"View\";\r\nexport default View;\r\n"]}