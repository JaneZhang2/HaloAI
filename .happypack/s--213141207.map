{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/react-lib/deepDiffer.js"],"names":["deepDiffer","one","two","len","ii","constructor","Array","isArray","length","key","twoKey","undefined"],"mappings":";;;;;;;;;;;AAWA,a;;;;;AAKA,GAAIA,YAAa,SAASC,GAAT,CAAcC,GAAd,CAAmB;;;;;;;;;;;;;;;;;;;;;;;AAuBxBC,GAvBwB;;;;AA2BnBC,EA3BmB,CAChC,GAAIH,MAAQC,GAAZ,CAAiB,CAEb,MAAO,MAAP,CACH,CACD,GAAK,MAAOD,IAAP,GAAe,UAAhB,EAAgC,MAAOC,IAAP,GAAe,UAAnD,CAAgE,CAE5D,MAAO,MAAP,CACH,CACD,GAAK,OAAOD,IAAP,mCAAOA,GAAP,KAAe,QAAhB,EAA8BA,MAAQ,IAA1C,CAAiD,CAE7C,MAAOA,OAAQC,GAAf,CACH,CACD,GAAK,OAAOA,IAAP,mCAAOA,GAAP,KAAe,QAAhB,EAA8BA,MAAQ,IAA1C,CAAiD,CAG7C,MAAO,KAAP,CACH,CACD,GAAID,IAAII,WAAJ,GAAoBH,IAAIG,WAA5B,CAAyC,CACrC,MAAO,KAAP,CACH,CACD,GAAIC,MAAMC,OAAN,CAAcN,GAAd,CAAJ,CAAwB,CAEhBE,GAFgB,CAEVF,IAAIO,MAFM,CAGpB,GAAIN,IAAIM,MAAJ,GAAeL,GAAnB,CAAwB,CACpB,MAAO,KAAP,CACH,CACD,IAASC,EAAT,CAAc,CAAd,CAAiBA,GAAKD,GAAtB,CAA2BC,IAA3B,CAAiC;AAC7B,GAAIJ,WAAWC,IAAIG,EAAJ,CAAX,CAAoBF,IAAIE,EAAJ,CAApB,CAAJ,CAAkC;AAC9B,MAAO,KAAP;AACH;AACJ;AACJ,CAXD,IAWO;AACH,IAAK,GAAIK,IAAT,GAAgBR,IAAhB,CAAqB;AACjB,GAAID,WAAWC,IAAIQ,GAAJ,CAAX,CAAqBP,IAAIO,GAAJ,CAArB,CAAJ,CAAoC;AAChC,MAAO,KAAP;AACH;AACJ;AACD,IAAK,GAAIC,OAAT,GAAmBR,IAAnB,CAAwB;;;AAGpB,GAAID,IAAIS,MAAJ,IAAgBC,SAAhB,EAA6BT,IAAIQ,MAAJ,IAAgBC,SAAjD,CAA4D;AACxD,MAAO,KAAP;AACH;AACJ;AACJ;AACD,MAAO,MAAP;AACH,CA/CD,C;;AAiDeX,U","file":"deepDiffer.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule deepDiffer\r\n * @flow\r\n */\r\n'use strict';\r\n\r\n/*\r\n * @returns {bool} true if different, false if equal\r\n */\r\nlet deepDiffer = function(one, two) {\r\n    if (one === two) {\r\n        // Short circuit on identical object references instead of traversing them.\r\n        return false;\r\n    }\r\n    if ((typeof one === 'function') && (typeof two === 'function')) {\r\n        // We consider all functions equal\r\n        return false;\r\n    }\r\n    if ((typeof one !== 'object') || (one === null)) {\r\n        // Primitives can be directly compared\r\n        return one !== two;\r\n    }\r\n    if ((typeof two !== 'object') || (two === null)) {\r\n        // We know they are different because the previous case would have triggered\r\n        // otherwise.\r\n        return true;\r\n    }\r\n    if (one.constructor !== two.constructor) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(one)) {\r\n        // We know two is also an array because the constructors are equal\r\n        var len = one.length;\r\n        if (two.length !== len) {\r\n            return true;\r\n        }\r\n        for (var ii = 0; ii < len; ii++) {\r\n            if (deepDiffer(one[ii], two[ii])) {\r\n                return true;\r\n            }\r\n        }\r\n    } else {\r\n        for (var key in one) {\r\n            if (deepDiffer(one[key], two[key])) {\r\n                return true;\r\n            }\r\n        }\r\n        for (var twoKey in two) {\r\n            // The only case we haven't checked yet is keys that are in two but aren't\r\n            // in one, which means they are different.\r\n            if (one[twoKey] === undefined && two[twoKey] !== undefined) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport default deepDiffer;\r\n"]}