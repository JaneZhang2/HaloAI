{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/react-lib/TouchHistoryMath.js"],"names":["TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","i","touchTrack","toAdd","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","length","undefined","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","module","exports"],"mappings":"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","file":"TouchHistoryMath.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/* eslint-disable */\r\n\r\nvar TouchHistoryMath = {\r\n  /**\r\n   * This code is optimized and not intended to look beautiful. This allows\r\n   * computing of touch centroids that have moved after `touchesChangedAfter`\r\n   * timeStamp. You can compute the current centroid involving all touches\r\n   * moves after `touchesChangedAfter`, or you can compute the previous\r\n   * centroid of all touches that were moved after `touchesChangedAfter`.\r\n   *\r\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\r\n   * data.\r\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\r\n   * are considered \"actively moving\" - not just \"active\".\r\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\r\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\r\n   * touches vs. previous centroid of now actively moving touches.\r\n   * @return {number} value of centroid in specified dimension.\r\n   */\r\n  centroidDimension: function(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {\r\n    var touchBank = touchHistory.touchBank;\r\n    var total = 0;\r\n    var count = 0;\r\n\r\n    var oneTouchData =\r\n      touchHistory.numberActiveTouches === 1\r\n        ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\r\n        : null;\r\n\r\n    if (oneTouchData !== null) {\r\n      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {\r\n        total +=\r\n          ofCurrent && isXAxis\r\n            ? oneTouchData.currentPageX\r\n            : ofCurrent && !isXAxis\r\n              ? oneTouchData.currentPageY\r\n              : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;\r\n        count = 1;\r\n      }\r\n    } else {\r\n      for (var i = 0; i < touchBank.length; i++) {\r\n        var touchTrack = touchBank[i];\r\n        if (\r\n          touchTrack !== null &&\r\n          touchTrack !== undefined &&\r\n          touchTrack.touchActive &&\r\n          touchTrack.currentTimeStamp >= touchesChangedAfter\r\n        ) {\r\n          var toAdd; // Yuck, program temporarily in invalid state.\r\n          if (ofCurrent && isXAxis) {\r\n            toAdd = touchTrack.currentPageX;\r\n          } else if (ofCurrent && !isXAxis) {\r\n            toAdd = touchTrack.currentPageY;\r\n          } else if (!ofCurrent && isXAxis) {\r\n            toAdd = touchTrack.previousPageX;\r\n          } else {\r\n            toAdd = touchTrack.previousPageY;\r\n          }\r\n          total += toAdd;\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\r\n  },\r\n\r\n  currentCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      touchesChangedAfter,\r\n      true, // isXAxis\r\n      true // ofCurrent\r\n    );\r\n  },\r\n\r\n  currentCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      touchesChangedAfter,\r\n      false, // isXAxis\r\n      true // ofCurrent\r\n    );\r\n  },\r\n\r\n  previousCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      touchesChangedAfter,\r\n      true, // isXAxis\r\n      false // ofCurrent\r\n    );\r\n  },\r\n\r\n  previousCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      touchesChangedAfter,\r\n      false, // isXAxis\r\n      false // ofCurrent\r\n    );\r\n  },\r\n\r\n  currentCentroidX: function(touchHistory) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      0, // touchesChangedAfter\r\n      true, // isXAxis\r\n      true // ofCurrent\r\n    );\r\n  },\r\n\r\n  currentCentroidY: function(touchHistory) {\r\n    return TouchHistoryMath.centroidDimension(\r\n      touchHistory,\r\n      0, // touchesChangedAfter\r\n      false, // isXAxis\r\n      true // ofCurrent\r\n    );\r\n  },\r\n\r\n  noCentroid: -1\r\n};\r\n\r\nmodule.exports = TouchHistoryMath;\r\n"]}