{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/apis/PanResponder/index.web.js"],"names":["currentCentroidXOfTouchesChangedAfter","TouchHistoryMath","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","_cw_scale","Dimensions","get","scale","PanResponder","_initializeGestureState","gestureState","moveX","moveY","x0","y0","dx","dy","vx","vy","numberActiveTouches","_accountsForMovesUpTo","_updateGestureStateOnMove","touchHistory","movedAfter","prevX","x","prevY","y","nextDX","nextDY","dt","mostRecentTimeStamp","create","config","stateID","Math","random","panHandlers","onStartShouldSetResponder","e","onStartShouldSetPanResponder","undefined","normalizeEvent","onMoveShouldSetResponder","preventDefault","onMoveShouldSetPanResponder","onStartShouldSetResponderCapture","nativeEvent","touches","length","type","onStartShouldSetPanResponderCapture","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onResponderGrant","onPanResponderGrant","onResponderReject","onPanResponderReject","onResponderRelease","onPanResponderRelease","moveShould","onResponderStart","onPanResponderStart","onResponderMove","onPanResponderMove","onResponderEnd","onPanResponderEnd","onResponderTerminate","onPanResponderTerminate","onResponderTerminationRequest","console","log","onPanResponderTerminationRequest","normalizedEvent","Object"],"mappings":"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","file":"index.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["\r\n\r\n\"use strict\";\r\nimport normalizeNativeEvent from './../../modules/react-lib/normalizeNativeEvent';\r\nimport  TouchHistoryMath from './../../modules/react-lib/TouchHistoryMath';\r\nimport Dimensions from './../../apis/Dimensions/index.web';\r\n\r\nvar currentCentroidXOfTouchesChangedAfter =\r\n    TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;\r\nvar currentCentroidYOfTouchesChangedAfter =\r\n    TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;\r\nvar previousCentroidXOfTouchesChangedAfter =\r\n    TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;\r\nvar previousCentroidYOfTouchesChangedAfter =\r\n    TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;\r\nvar currentCentroidX = TouchHistoryMath.currentCentroidX;\r\nvar currentCentroidY = TouchHistoryMath.currentCentroidY;\r\nvar _cw_scale = Dimensions.get('window').scale;\r\nvar PanResponder = {\r\n\r\n    _initializeGestureState: function(gestureState) {\r\n        gestureState.moveX = 0;\r\n        gestureState.moveY = 0;\r\n        gestureState.x0 = 0;\r\n        gestureState.y0 = 0;\r\n        gestureState.dx = 0;\r\n        gestureState.dy = 0;\r\n        gestureState.vx = 0;\r\n        gestureState.vy = 0;\r\n        gestureState.numberActiveTouches = 0;\r\n        // All `gestureState` accounts for timeStamps up until:\r\n        gestureState._accountsForMovesUpTo = 0;\r\n    },\r\n    _updateGestureStateOnMove: function(gestureState, touchHistory) {\r\n        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\r\n        gestureState.moveX = currentCentroidXOfTouchesChangedAfter(\r\n            touchHistory,\r\n            gestureState._accountsForMovesUpTo\r\n        );\r\n        gestureState.moveY = currentCentroidYOfTouchesChangedAfter(\r\n            touchHistory,\r\n            gestureState._accountsForMovesUpTo\r\n        );\r\n        var movedAfter = gestureState._accountsForMovesUpTo;\r\n        var prevX = (previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter))/_cw_scale;\r\n        var x = (currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter))/_cw_scale;\r\n        var prevY = (previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter))/_cw_scale;\r\n        var y = (currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter))/_cw_scale;\r\n        var nextDX = gestureState.dx + (x - prevX);\r\n        var nextDY = gestureState.dy + (y - prevY);\r\n\r\n        // TODO: This must be filtered intelligently.\r\n        var dt =\r\n            (touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo);\r\n        gestureState.vx = (nextDX - gestureState.dx) / dt;\r\n        gestureState.vy = (nextDY - gestureState.dy) / dt;\r\n\r\n        gestureState.dx = nextDX;\r\n        gestureState.dy = nextDY;\r\n        gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;\r\n    },\r\n    /**\r\n     * @method create\r\n     * @param {object} config 手势配置。\r\n     * @description 创建，生成一个新的`gestureState`对象\r\n     *\r\n     * 一个`gestureState`对象有如下字段\r\n     * - `stateID`：触摸状态的ID。随机生成。\r\n     * - `moveX`：最近一次移动时的屏幕横坐标\r\n     * - `moveY`：最近一次移动时的屏幕纵坐标\r\n     * - `x0`：当响应器产生时的屏幕坐标\r\n     * - `y0`：当响应器产生时的屏幕坐标\r\n     * - `dx`：从触摸操作开始时的累计横向路程\r\n     * - `dy`：从触摸操作开始时的累计纵向路程\r\n     * - `vx`：当前的横向移动速度\r\n     * - `vy`：当前的纵向移动速度\r\n     * - `numberActiveTouches`：当前在屏幕上的有效触摸点的数量\r\n     *\r\n     * 配置参数config如下\r\n     * - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`\r\n     * - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`\r\n     * - `onStartShouldSetPanResponder: (e, gestureState) => {...}`\r\n     * - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`\r\n     * - `onPanResponderReject: (e, gestureState) => {...}`\r\n     * - `onPanResponderGrant: (e, gestureState) => {...}`\r\n     * - `onPanResponderStart: (e, gestureState) => {...}`\r\n     * - `onPanResponderEnd: (e, gestureState) => {...}`\r\n     * - `onPanResponderRelease: (e, gestureState) => {...}`\r\n     * - `onPanResponderMove: (e, gestureState) => {...}`\r\n     * - `onPanResponderTerminate: (e, gestureState) => {...}`\r\n     * - `onPanResponderTerminationRequest: (e, gestureState) => {...}`\r\n     * - `onShouldBlockNativeResponder: (e, gestureState) => {...}`\r\n     */\r\n    create: function(config) {\r\n        var gestureState = {\r\n            // Useful for debugging\r\n            stateID: Math.random(),\r\n        };\r\n        PanResponder._initializeGestureState(gestureState);\r\n        var panHandlers = {\r\n            onStartShouldSetResponder: function(e) {\r\n                return config.onStartShouldSetPanResponder === undefined ? false :\r\n                    config.onStartShouldSetPanResponder(normalizeEvent(e), gestureState);\r\n            },\r\n            onMoveShouldSetResponder: function(e) {\r\n                e.preventDefault()\r\n                return config.onMoveShouldSetPanResponder === undefined ? false :\r\n                    config.onMoveShouldSetPanResponder(normalizeEvent(e), gestureState);\r\n            },\r\n            onStartShouldSetResponderCapture: function(e) {\r\n                // TODO: Actually, we should reinitialize the state any time\r\n                // touches.length increases from 0 active to > 0 active.\r\n                if (e.nativeEvent.touches) {\r\n                    if (e.nativeEvent.touches.length === 1) {\r\n                        PanResponder._initializeGestureState(gestureState);\r\n                    }\r\n                }\r\n                else if (e.nativeEvent.type === 'mousedown') {\r\n                    PanResponder._initializeGestureState(gestureState);\r\n                }\r\n                gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;\r\n                return config.onStartShouldSetPanResponderCapture !== undefined ?\r\n                    config.onStartShouldSetPanResponderCapture(normalizeEvent(e), gestureState) : false;\r\n            },\r\n\r\n            onMoveShouldSetResponderCapture: function(e) {\r\n                e.preventDefault()\r\n                var touchHistory = e.touchHistory;\r\n                // Responder system incorrectly dispatches should* to current responder\r\n                // Filter out any touch moves past the first one - we would have\r\n                // already processed multi-touch geometry during the first event.\r\n                if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {\r\n                    return false;\r\n                }\r\n                PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\r\n                return config.onMoveShouldSetPanResponderCapture ?\r\n                    config.onMoveShouldSetPanResponderCapture(normalizeEvent(e), gestureState) : false;\r\n            },\r\n\r\n            onResponderGrant: function(e) {\r\n                gestureState.x0 = currentCentroidX(e.touchHistory);\r\n                gestureState.y0 = currentCentroidY(e.touchHistory);\r\n                gestureState.dx = 0;\r\n                gestureState.dy = 0;\r\n                config.onPanResponderGrant && config.onPanResponderGrant(normalizeEvent(e), gestureState);\r\n                // TODO: t7467124 investigate if this can be removed\r\n                return true;\r\n//          config.onShouldBlockNativeResponder === undefined ? true :\r\n//          config.onShouldBlockNativeResponder();\r\n            },\r\n\r\n            onResponderReject: function(e) {\r\n                config.onPanResponderReject && config.onPanResponderReject(normalizeEvent(e), gestureState);\r\n            },\r\n\r\n            onResponderRelease: function(e) {\r\n                config.onPanResponderRelease && config.onPanResponderRelease(normalizeEvent(e), gestureState);\r\n                PanResponder._initializeGestureState(gestureState);\r\n                panHandlers.moveShould = null\r\n            },\r\n\r\n            onResponderStart: function(e) {\r\n                var touchHistory = e.touchHistory;\r\n                gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\r\n                config.onPanResponderStart && config.onPanResponderStart(normalizeEvent(e), gestureState);\r\n            },\r\n\r\n            onResponderMove: function(e) {\r\n                var touchHistory = e.touchHistory;\r\n                // Guard against the dispatch of two touch moves when there are two\r\n                // simultaneously changed touches.\r\n                if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {\r\n                    return;\r\n                }\r\n                // Filter out any touch moves past the first one - we would have\r\n                // already processed multi-touch geometry during the first event.\r\n                PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\r\n                config.onPanResponderMove && config.onPanResponderMove(normalizeEvent(e), gestureState);\r\n            },\r\n\r\n            onResponderEnd: function(e) {\r\n                var touchHistory = e.touchHistory;\r\n                gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\r\n                config.onPanResponderEnd && config.onPanResponderEnd(normalizeEvent(e), gestureState);\r\n                panHandlers.moveShould = null\r\n            },\r\n\r\n            onResponderTerminate: function(e) {\r\n                config.onPanResponderTerminate &&\r\n                config.onPanResponderTerminate(e, gestureState);\r\n                //h5中不需要有锁概念 如遇到则强制release\r\n                config.onPanResponderRelease && config.onPanResponderRelease(normalizeEvent(e), gestureState);\r\n                PanResponder._initializeGestureState(gestureState);\r\n                panHandlers.moveShould = null\r\n            },\r\n\r\n            onResponderTerminationRequest: function(e) {\r\n                console.log(\"TerminationRequest\");\r\n                return config.onPanResponderTerminationRequest === undefined ? true :\r\n                    config.onPanResponderTerminationRequest(normalizeEvent(e), gestureState);\r\n            },\r\n        };\r\n        return {panHandlers: panHandlers};\r\n    },\r\n};\r\n\r\nfunction normalizeEvent(e) {\r\n    const normalizedEvent = Object.create(e);\r\n    normalizedEvent.nativeEvent = normalizeNativeEvent(e.nativeEvent, e.type);\r\n    return normalizedEvent;\r\n}\r\n\r\nexport default PanResponder;\r\n"]}