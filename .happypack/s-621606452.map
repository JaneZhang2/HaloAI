{"version":3,"sources":["node_modules/@ctrip/crnweb/src/crn/lib/Page.js"],"names":["Page","props","global","currentApp","pageInstance","pageName","params","queryStringObj","navigation","push","pop","arguments","replace","index","cb","replaceAtIndex","replacePrevious","key","urlQuery","context","app","env","marginTop","Platform","OS","tpheader","setHeader","hasHeader","defaultStyle","flexDirection","flex","_calculateHeaderViewHeight","position","children","route","channel","getChannel","onWillFocus","pageId","getPageId","url","location","href","urlObj","search","orderid","refer","document","referrer","encodeURIComponent","JSON","stringify","name","cw_routeMapConfig","indexOf","Log","send","page_id","page_url_query","err","console","log","onDidFocus","CW_FSTIME","startTime","performance","timing","navigationStart","endTime","Date","getTime","diffTime","options","prjName","WEBPACK_PROJECT_NAME","crnwebVer","WEBPACK_CRNWEB_VERSION","cwVer","WEBPACK_CW_VERSION","pageid","logMetric","ex","isInApp","CtripUtil","app_back_to_home","protocol","host","URL","openURL","info","DeviceEventEmitter","publish","callback","Component","enableNativeDragBack","disableNativeDragBack"],"mappings":"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","file":"Page.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\r\n * Copyright (c) 2016-present, Ctrip.\r\n * All rights reserved.\r\n *\r\n * @providesModule Page\r\n */\r\n'use strict';\r\nimport React, {\r\n  Component} from 'react';\r\nimport {\r\n  View,\r\n  Platform,\r\n  DeviceEventEmitter\r\n} from 'react-native';\r\n\r\nimport ViewPort from './ViewPort';\r\nimport Log from './Log';\r\nimport URL from './URL';\r\nimport getUrlParams from './Util/getUrlParams';\r\nimport parseUrl from './Util/parseUrl';\r\n\r\nexport default class Page extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        global.currentApp.pageInstance=this;\r\n    }\r\n\r\n    static enableNativeDragBack=function(){}\r\n    static disableNativeDragBack=function(){}\r\n    /**\r\n     * @method goHome\r\n     * @description 返回大首页\r\n     * @brief 返回大首页\r\n     */\r\n    static goHome() {\r\n        // let origin = global.location.origin;\r\n        // let url = origin+\"/html5\";\r\n        if (Platform.isInApp && global.CtripUtil) {\r\n            global.CtripUtil.app_back_to_home();\r\n        }\r\n        else {\r\n            const url = global.location.protocol + '//' + global.location.host + '/html5';\r\n            URL.openURL(url);\r\n        }\r\n    }\r\n    /**\r\n     * @method popToPage\r\n     * @description 跨页面返回到注册过的某个页面\r\n     * @brief 跨页面返回到注册过的某个页面\r\n     * @param {string} name 注册的页面名\r\n     * @param {JSON} info 返回时带上info信息\r\n     * @example\r\n     * ```\r\n     *\r\n\r\n     Page.popToPage('MyTest',{'aaa':'bbb'})\r\n     * ```\r\n     */\r\n    static popToPage(name,info) {\r\n        // Bridge.callNative('Page', 'popToPage', {name,info});\r\n        // let route={name,params:info};\r\n        // this.props.navigation.popToRoute(route);\r\n\r\n        DeviceEventEmitter.publish(\"popToPage\", [name,info]);\r\n\r\n    }\r\n    /**\r\n     * @method registerPage\r\n     * @description 注册页面名，用于RN-Hybrid-Native之间跨页面返回\r\n     * @brief 注册页面名，用于RN-Hybrid-Native之间跨页面返回\r\n     * @param {string} name 要注册的当前页面名\r\n     * @param {function} callback 调用popToPage返回当前页时的回调，带上info信息\r\n     * @example\r\n     * ```\r\n     *\r\n     Page.registerPage('MyRNTest',(info)=>{\r\n      alert(JSON.stringify(info));\r\n    })\r\n     * ```\r\n     */\r\n    static registerPage(name,callback) {\r\n        // Bridge.callNativeWithCallback(\"Page\", \"registerPage\", {name}, (status, result) => {\r\n        //     callback(result);\r\n        // });\r\n        callback();\r\n    }\r\n\r\n    push(pageName, params = {}, queryStringObj={}) {\r\n      this.props.navigation.push(pageName, params,queryStringObj);\r\n    }\r\n    pop() {\r\n        this.props.navigation.pop(...arguments);\r\n    }\r\n    /**\r\n     * @method replace\r\n     * @brief  使用指定页面替换当前页面\r\n     * @param {string} pageName 页面名称\r\n     * @param {json} params 页面传递参数\r\n     * @description 使用指定页面替换当前页面\r\n     * @since >=7.6\r\n     * @example\r\n     * ```\r\n     * //当前页面为Page1,替换成Page2\r\n     * this.replace('Page2');\r\n     * //也可以带参数到Page2，Page2通过this.props.foo 访问\r\n     * this.replace('Page2',{'foo':'xxx'});\r\n     * ```\r\n     */\r\n    replace(pageName, params = {}) {\r\n        this.props.navigation.replace(pageName, params);\r\n    }\r\n    /**\r\n     * @method replaceAtIndex\r\n     * @brief  使用指定页面替换路由下标为Index的界面\r\n     * @param {string} pageName 页面名称\r\n     * @param {Number} index 需要被替换的路由堆栈中下标\r\n     * @param {function} cb 页面被替换后的回调\r\n     * @param {json} params 页面传递参数\r\n     * @since  >=7.6\r\n     * @description 使用指定页面替换路由下标为Index的界面\r\n     * @example\r\n     * ```\r\n     * //当前路由为Page1->Page2->Page3 ,使用Page4替换Page2\r\n     * this.replaceAtIndex('Page4',1,function(){\r\n   *      console.log('Did repalce');\r\n   * });\r\n     *\r\n     * this.replaceAtIndex('Page4',1,function(){\r\n   *      console.log('Did repalce');\r\n   * },{'foo':'xxx'});\r\n     * ```\r\n     */\r\n    replaceAtIndex(pageName,index,cb,params={}){\r\n        // if(index == this.props.navigation.navigator.state.presentedIndex){\r\n        //     this.pageWillDisappear && this.pageWillDisappear();\r\n        //     this.props.navigation.replaceAtIndex(pageName,index,cb,params);\r\n        //     this.pageDidDisappear && this.pageDidDisappear();\r\n        // }else{\r\n        //     this.props.navigation.replaceAtIndex(pageName,index,cb,params);\r\n        // }\r\n        this.props.navigation.replaceAtIndex(pageName,index,cb,params);\r\n    }\r\n\r\n    /**\r\n     * @method replacePrevios\r\n     * @brief  使用指定页面替换当前页面路由上一个页面\r\n     * @param {string} pageName 页面名称\r\n     * @param {json} params 页面传递参数\r\n     * @since  >=7.6\r\n     * @description 使用指定页面替换当前页面路由上一个页面\r\n     * @example\r\n     * ```\r\n     * //当前路由为Page1->Page2->Page3 ,使用Page4替换Page2\r\n     * this.replacePrevios('Page4');\r\n     *  //Page4通过通过this.props.foo 访问\r\n     *  this.replacePrevios('Page4',{'foo':'xxx'});\r\n     * ```\r\n     */\r\n    replacePrevious(pageName,params={}){\r\n        this.props.navigation.replacePrevious(pageName,params);\r\n    }\r\n\r\n    /**\r\n     * 获取jsbundle中queryString中的参数\r\n     * @param key\r\n     */\r\n    getQuery(key){\r\n        let urlQuery=this.context.urlQuery;\r\n        urlQuery=urlQuery||this.props.app.urlQuery;\r\n        return key ? urlQuery[key] : urlQuery;\r\n    }\r\n    /**\r\n     * 获取启动APP的环境变量\r\n     * @param key\r\n     */\r\n    getEnv(key){\r\n        return key ? this.context.env[key] : this.context.env;\r\n    }\r\n    _calculateHeaderViewHeight(){\r\n        let marginTop = 56;\r\n        if(Platform.OS==='ios'){\r\n            marginTop = 64\r\n        }\r\n        let tpheader= this.props.app.setHeader&&this.props.app.hasHeader();\r\n        return  tpheader ? marginTop : 0;\r\n    }\r\n    render(){\r\n        let defaultStyle = {flexDirection:'column',flex:1, marginTop: this._calculateHeaderViewHeight()};\r\n        return (\r\n            <View style={[defaultStyle]}>\r\n                <ViewPort style={{flex:1,position:'relative'}}>\r\n                    {this.props.children}\r\n                </ViewPort>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    //页面还未加载\r\n    _onWillShow(route) {\r\n        global.channel = this.getChannel && this.getChannel(); //如果有page需要使用到google的相关产品，则需要设置\r\n        this.onWillFocus && this.onWillFocus(route);\r\n    }\r\n    _onDidShow(route) {\r\n        let pageId = this.getPageId ? this.getPageId() : ((this.props && this.props.pageId) || 0);\r\n        let url = global.location.href;\r\n        let urlObj = getUrlParams(parseUrl(url).search) || {};\r\n        let orderid = urlObj['orderid'] || urlObj['oid'] || \"\";\r\n        let refer;\r\n        if(global.document){\r\n            refer = global.document.referrer;\r\n        }\r\n        // 保持和crn一致，不上送pv埋点，由业务方自己调用Log.send('pv');\r\n        try{\r\n\t        let params = \"\";\r\n\t        if(route.params){\r\n\t\t        params = '&params='+encodeURIComponent(JSON.stringify(route.params))\r\n\t        }\r\n\t        let pageName =\"\";\r\n\t        if(route.name && global.cw_routeMapConfig) {\r\n\t\t        for (let key in global.cw_routeMapConfig) {\r\n\t\t\t        if (global.cw_routeMapConfig[key] == route.name) {\r\n\t\t\t\t        pageName = key;\r\n\t\t\t\t        break;\r\n\t\t\t        }\r\n\t\t        }\r\n\t\t        if(url.indexOf('?') == -1){\r\n\t\t\t        pageName = '?pageName=' + pageName;\r\n                }\r\n                else{\r\n\t\t\t        pageName = '&pageName=' + pageName;\r\n                }\r\n\t        }\r\n\t        pageId !== 'ignore_page_pv' && Log.send('pv', {\r\n\t\t        page_id: pageId,\r\n\t\t        url:url + pageName + params,\r\n\t\t        page_url_query: JSON.stringify(this.props.app.urlQuery),\r\n\t\t        orderid:orderid,\r\n\t\t        refer:refer\r\n\t        });\r\n        }catch(err){\r\n            console.log(\"Page _onDidShow error message:\", err);\r\n        }\r\n        //revoke subpage event\r\n        this.onDidFocus && this.onDidFocus(route);\r\n    }\r\n    logPageRenderFinished() {\r\n        //we can only judge the firstScreen time only once,\r\n        if(global.CW_FSTIME){\r\n            try{\r\n                let startTime=global.performance.timing.navigationStart,endTime=(new Date).getTime();\r\n                let diffTime = endTime - (startTime||global.CW_FSTIME);\r\n                let options={prjName: WEBPACK_PROJECT_NAME, crnwebVer:WEBPACK_CRNWEB_VERSION,cwVer:WEBPACK_CW_VERSION,startTime:startTime,endTime:endTime,CW_FSTIME:global.CW_FSTIME};\r\n                if(this&&this.getPageId&&'function'===typeof this.getPageId){\r\n                    options.pageid=this.getPageId();\r\n                }\r\n                Log.logMetric('101367',diffTime,options);\r\n                global.CW_FSTIME=0;\r\n            }catch(ex){\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]}