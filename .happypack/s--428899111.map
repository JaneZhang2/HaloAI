{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/modules/wrapper/LayoutWrapper/index.web.js"],"names":["WrappedComponent","LayoutMixin","props","unmounted","layoutHandle","bind","trailing","state","layout","domNodeString","onLayout","domNode","ReactDOM","findDOMNode","stateLayout","stateDomNodeString","x","y","width","height","innerHTML","nativeEvent","setState"],"mappings":";;;;AAIA,a;;;AAGA,4B;AACA,mC;AACA,sC;AACA,yC;;AAEe,SAACA,gBAAD,CAAqB;AAC1BC,WAD0B;AAE5B,qBAAYC,KAAZ,CAAmB;AACTA,KADS;;;;;;AAOnBC,SAPmB,CAOP,KAPO,CAEf,MAAKC,YAAL,CAAoB,uBAAS,MAAKA,YAAL,CAAkBC,IAAlB,OAAT,CAAuC,GAAvC,CAA4C,CAACC,SAAU,IAAX,CAA5C,CAApB,CAEA,MAAKC,KAAL,aAAiB,MAAKA,KAAtB,EAA4BC,OAAQ,EAApC,CAAwCC,cAAe,EAAvD,GAJe,aAKlB,CAP2B;;AAWR;AAChB;AACA,GAAI,KAAKP,KAAL,CAAWQ,QAAf,CAAyB;AACrB,KAAKN,YAAL;AACH;AACJ,CAhB2B;;AAkBP;AACjB;AACA,GAAI,KAAKF,KAAL,CAAWQ,QAAf,CAAyB;AACrB,KAAKN,YAAL;AACH;AACJ,CAvB2B;;AAyBL;;AAEnB;AACA,KAAKD,SAAL,CAAiB,IAAjB;AACH,CA7B2B;;AA+Bb;;AAEX,GAAI,KAAKA,SAAT,CAAoB;AAChB;AACH;;AAED,GAAIQ,SAAUC,mBAASC,WAAT,CAAqB,IAArB,CAAd;AACI,GAAIL,QAAS,wBAAUG,OAAV,CAAb;AACJ,GAAIG,aAAc,KAAKP,KAAL,CAAWC,MAA7B;AACA,GAAIO,oBAAqB,KAAKR,KAAL,CAAWE,aAApC;;AAEA,GAAIK,YAAYE,CAAZ,GAAkBR,OAAOQ,CAAzB,EAA8BF,YAAYG,CAAZ,GAAkBT,OAAOS,CAAvD,EAA4DH,YAAYI,KAAZ,GAAsBV,OAAOU,KAAzF,EAAkGJ,YAAYK,MAAZ,GAAuBX,OAAOW,MAAhI,EAA0IR,QAAQS,SAAR,GAAsBL,kBAApK,CAAwL;;AAEvL,KAAKb,KAAL,CAAWQ,QAAX,EAAuB,KAAKR,KAAL,CAAWQ,QAAX,CAAoB,CAACW,YAAa,CAACb,mBAAWA,MAAX,CAAD,CAAd,CAApB,CAAvB;AACG,KAAKc,QAAL,CAAc,CAACd,OAAQA,MAAT,CAAiBC,cAAeE,SAASA,QAAQS,SAAjD,CAAd;;AAEH;AACJ,CAhD2B,yBACNpB,gBADM;;AAkDhC,MAAOC,YAAP;AACH,C","file":"index.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\n * @providesModule LayoutMixin\n */\n\n'use strict';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport getLayout from './getLayout'\nimport throttle from 'lodash/throttle';\n\nexport default (WrappedComponent) =>{\n    class LayoutMixin extends WrappedComponent {\n        constructor(props) {\n            super(props);\n            this.layoutHandle = throttle(this.layoutHandle.bind(this), 100, {trailing: true});\n\n            this.state = {...this.state,layout: {}, domNodeString: \"\"};\n        }\n\n        unmounted = false;\n        \n        componentDidMount() {\n            super.componentDidMount&&super.componentDidMount();\n            if (this.props.onLayout) {\n                this.layoutHandle();\n            }\n        }\n\n        componentDidUpdate() {\n            super.componentDidUpdate&&super.componentDidUpdate();\n            if (this.props.onLayout) {\n                this.layoutHandle();\n            }\n        }\n\n        componentWillUnmount() {\n            // tp('view componentWillUnmount',{state:this.state,prop:props})\n            super.componentWillUnmount&&super.componentWillUnmount()\n            this.unmounted = true;\n        }\n\n        layoutHandle() {\n            //ReactDOM.findDOMNode() 在组件unmounted时调用会报错。\n            if (this.unmounted) {\n                return;\n            }\n            //修复view的高度、宽度不变，内容改变时onLayout不执行以及取到的值不对的问题。\n            var domNode = ReactDOM.findDOMNode(this);\n                var layout = getLayout(domNode);\n            var stateLayout = this.state.layout;\n            var stateDomNodeString = this.state.domNodeString;\n            //tp(s);\n            if (stateLayout.x !== layout.x || stateLayout.y !== layout.y || stateLayout.width !== layout.width || stateLayout.height !== layout.height || domNode.innerHTML !== stateDomNodeString) {\n                //tp(\"完成触发onLayout\",{stateDomNodeString,layout: layout, domNode: domNode.innerHTML});\n\t            this.props.onLayout && this.props.onLayout({nativeEvent: {layout:{...layout}}});//layout must be a copy or if bu change its value will lead to dead loop render\n                this.setState({layout: layout, domNodeString: domNode&&domNode.innerHTML});\n                // tp(s,{state:'旧的状态',stateLayout,stateDomNodeString},'',{state:'Dom最新状态',layout,'domNode.innerHTML':domNode.innerHTML});\n            }\n        }\n    }\n    return LayoutMixin;\n};\n"]}