{"version":3,"sources":["../../.npm-global/lib/node_modules/@ctrip/cw/node_modules/react-dom/cjs/react-dom-unstable-native-dependencies.development.js"],"names":["process","env","NODE_ENV","ReactDOM","require","invariant","warning","_assign","emptyFunction","window","dispatchEvent","document","createEvent","createElement","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","isEndish","topLevelType","isMoveish","isStartish","validateEventDispatches","event","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","Array","isArray","listenersLen","length","instancesIsArr","instancesLen","executeDispatchesInOrderStopAtTrueImpl","i","isPropagationStopped","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","currentTarget","res","hasDispatches","getParent","inst","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","tempB","depthB","depth","alternate","isAncestor","getParentInstance","traverseTwoPhase","fn","arg","path","push","accumulateInto","current","next","apply","concat","forEachAccumulated","arr","cb","scope","forEach","call","isInteractive","shouldPreventMouseEvent","name","type","props","disabled","getListener","registrationName","listener","stateNode","listenerAtPhase","propagationPhase","dispatchConfig","phasedRegistrationNames","accumulateDirectionalDispatches","phase","accumulateTwoPhaseDispatchesSingle","_targetInst","accumulateTwoPhaseDispatchesSingleSkipTarget","targetInst","parentInst","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","events","accumulateTwoPhaseDispatchesSkipTarget","accumulateDirectDispatches","didWarnForAddedNewProperty","isProxySupported","Proxy","shouldBeReleasedProperties","EventInterface","target","thatReturnsNull","eventPhase","bubbles","cancelable","timeStamp","Date","now","defaultPrevented","isTrusted","SyntheticEvent","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","Interface","constructor","normalize","propName","hasOwnProperty","returnValue","isDefaultPrevented","thatReturnsTrue","thatReturnsFalse","prototype","cancelBubble","persist","isPersistent","destructor","Object","defineProperty","getPooledWarningPropertyDefinition","augmentClass","Class","Super","E","addEventPoolingTo","construct","args","create","that","set","prop","value","indexOf","getVal","isFunction","configurable","val","action","warn","get","result","getPooledEvent","nativeInst","EventConstructor","instance","eventPool","pop","releasePooledEvent","getPooled","release","SyntheticEvent$1","ResponderSyntheticEvent","dispatchMarker","touchHistory","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","recordTouchStart","recordTouchMove","console","error","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","slice","ResponderTouchHistoryStore","recordTouchTrack","touchTrackToCheck","activeRecord","changedTouches","touches","accumulate","responderInst","trackedTouchCount","previousActiveTouches","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","bubbled","captured","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","setResponderAndExtractTransfer","shouldSetEventType","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","undefined","_getResponder","extractEvents","gesture","finalEvent","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","isResponderTerminate","isResponderRelease","finalTouch","GlobalInteractionHandler","injection","injectGlobalResponderHandler","injectGlobalInteractionHandler","injectComponentTree","Injected","ReactDOMComponentTree","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactDOMUnstableNativeDependencies","freeze","module","exports"],"mappings":"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","file":"react-dom-unstable-native-dependencies.development.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/** @license React v16.2.0\n * react-dom-unstable-native-dependencies.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar ReactDOM = require('react-dom');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar _assign = require('object-assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // untintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    \n  }\n}\n\nvar getFiberCurrentPropsFromNode = null;\nvar getInstanceFromNode = null;\nvar getNodeFromInstance = null;\n\nvar injection = {\n  injectComponentTree: function (Injected) {\n    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;\n    getInstanceFromNode = Injected.getInstanceFromNode;\n    getNodeFromInstance = Injected.getNodeFromInstance;\n\n    {\n      warning(getNodeFromInstance && getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\n{\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');\n  };\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : void 0;\n  event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n// Before we know whether it is functional or class\n\n\n // Root of a host tree. Could be nested inside another node.\n // A subtree. Could be an entry point to a different renderer.\nvar HostComponent = 5;\n\nfunction getParent(inst) {\n  do {\n    inst = inst['return'];\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n    instB = getParent(instB);\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  return getParent(inst);\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\n\n/**\n * Ordered list of injected plugins.\n */\n\n\n/**\n * Mapping from event name to dispatch config\n */\n\n\n/**\n * Mapping from registration name to plugin module\n */\n\n\n/**\n * Mapping from registration name to event name\n */\n\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in true.\n * @type {Object}\n */\n\n// Trust the developer to only use possibleRegistrationNames in true\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginOrder}\n */\n\n\n/**\n * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginsByName}\n */\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\n\n/**\n * Methods for injecting dependencies.\n */\n\n\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\nfunction getListener(inst, registrationName) {\n  var listener;\n\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n  // live here; needs to be moved to a better place soon\n  var stateNode = inst.stateNode;\n  if (!stateNode) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  var props = getFiberCurrentPropsFromNode(stateNode);\n  if (!props) {\n    // Work in progress.\n    return null;\n  }\n  listener = props[registrationName];\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;\n  return listener;\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\n\n\n/**\n * Enqueues a synthetic event that should be dispatched when\n * `processEventQueue` is invoked.\n *\n * @param {*} events An accumulation of synthetic events.\n * @internal\n */\n\n\n/**\n * Dispatches all synthetic events on the event queue.\n *\n * @internal\n */\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing even a\n * single one.\n */\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    warning(inst, 'Dispatching inst must not be null');\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? getParentInstance(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/* eslint valid-typeof: 0 */\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\nvar EVENT_POOL_SIZE = 10;\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  addEventPoolingTo(Class);\n};\n\n/** Proxying after everything set on SyntheticEvent\n * to resolve Proxy issue on some WebKit browsers\n * in which some Event properties are set to undefined (GH#10010)\n */\n{\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              warning(didWarnForAddedNewProperty || target.isPersistent(), \"This synthetic event is reused for performance reasons. If you're \" + \"seeing this, you're adding a new property in the synthetic event object. \" + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    warning(warningCondition, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  var EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n    return instance;\n  }\n  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\nvar SyntheticEvent$1 = SyntheticEvent;\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\nvar ResponderEventInterface = {\n  touchHistory: function (nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native event.\n * @extends {SyntheticEvent}\n */\nfunction ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent$1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\n\n\nvar MAX_TOUCH_BANK = 20;\nvar touchBank = [];\nvar touchHistory = {\n  touchBank: touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0\n};\n\nfunction timestampForTouch(touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return touch.timeStamp || touch.timestamp;\n}\n\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\nfunction createTouchRecord(touch) {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n}\n\nfunction resetTouchRecord(touchRecord, touch) {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier(_ref) {\n  var identifier = _ref.identifier;\n\n  !(identifier != null) ? invariant(false, 'Touch object is missing identifier.') : void 0;\n  {\n    warning(identifier <= MAX_TOUCH_BANK, 'Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);\n  }\n  return identifier;\n}\n\nfunction recordTouchStart(touch) {\n  var identifier = getTouchIdentifier(touch);\n  var touchRecord = touchBank[identifier];\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    console.error('Cannot record touch move without a touch start.\\n' + 'Touch Move: %s\\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());\n  }\n}\n\nfunction recordTouchEnd(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    console.error('Cannot record touch end without a touch start.\\n' + 'Touch End: %s\\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());\n  }\n}\n\nfunction printTouch(touch) {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch)\n  });\n}\n\nfunction printTouchBank() {\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += ' (original size: ' + touchBank.length + ')';\n  }\n  return printed;\n}\n\nvar ResponderTouchHistoryStore = {\n  recordTouchTrack: function (topLevelType, nativeEvent) {\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n        {\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n          warning(activeRecord != null && activeRecord.touchActive, 'Cannot find single active touch.');\n        }\n      }\n    }\n  },\n\n\n  touchHistory: touchHistory\n};\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\nfunction accumulate(current, next) {\n  !(next != null) ? invariant(false, 'accumulate(...): Accumulated items must be not be null or undefined.') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (Array.isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\nvar responderInst = null;\n\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\nvar trackedTouchCount = 0;\n\n/**\n * Last reported number of active touches.\n */\nvar previousActiveTouches = 0;\n\nvar changeResponder = function (nextResponderInst, blockHostResponder) {\n  var oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);\n  }\n};\n\nvar eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onStartShouldSetResponder',\n      captured: 'onStartShouldSetResponderCapture'\n    }\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onScrollShouldSetResponder',\n      captured: 'onScrollShouldSetResponderCapture'\n    }\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelectionChangeShouldSetResponder',\n      captured: 'onSelectionChangeShouldSetResponderCapture'\n    }\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onMoveShouldSetResponder',\n      captured: 'onMoveShouldSetResponderCapture'\n    }\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: { registrationName: 'onResponderStart' },\n  responderMove: { registrationName: 'onResponderMove' },\n  responderEnd: { registrationName: 'onResponderEnd' },\n  responderRelease: { registrationName: 'onResponderRelease' },\n  responderTerminationRequest: {\n    registrationName: 'onResponderTerminationRequest'\n  },\n  responderGrant: { registrationName: 'onResponderGrant' },\n  responderReject: { registrationName: 'onResponderReject' },\n  responderTerminate: { registrationName: 'onResponderTerminate' }\n};\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginHub`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginHub` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginHub`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginHub`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginHub`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginHub` dispatches as usual)\n * - `touchStart`              (`EventPluginHub` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginHub` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === 'topSelectionChange' ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n\n  // TODO: stop one short of the current responder.\n  var bubbleShouldSetFrom = !responderInst ? targetInst : getLowestCommonAncestor(responderInst, targetInst);\n\n  // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n  var extracted;\n  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  accumulateDirectDispatches(grantEvent);\n  var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n  if (responderInst) {\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);\n    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n  return extracted;\n}\n\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return topLevelInst && (\n  // responderIgnoreScroll: We are trying to migrate away from specifically\n  // tracking native scroll events here and responderIgnoreScroll indicates we\n  // will send topTouchCancel to handle canceling touch events instead\n  topLevelType === 'topScroll' && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === 'topSelectionChange' || isStartish(topLevelType) || isMoveish(topLevelType));\n}\n\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\nfunction noResponderTouches(nativeEvent) {\n  var touches = nativeEvent.touches;\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n  for (var i = 0; i < touches.length; i++) {\n    var activeTouch = touches[i];\n    var target = activeTouch.target;\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      var targetInst = getInstanceFromNode(target);\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nvar ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function () {\n    return responderInst;\n  },\n\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        console.error('Ended a touch event which was not counted in `trackedTouchCount`.');\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n\n    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;\n    // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n    var isResponderTouchStart = responderInst && isStartish(topLevelType);\n    var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n\n    if (incrementalTouch) {\n      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    var isResponderTerminate = responderInst && topLevelType === 'topTouchCancel';\n    var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n    if (finalTouch) {\n      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;\n    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {\n      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);\n    }\n    previousActiveTouches = numberActiveTouches;\n\n    return extracted;\n  },\n\n  GlobalResponderHandler: null,\n  GlobalInteractionHandler: null,\n\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler: function (GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    },\n\n    /**\n     * @param {{onChange: (numberActiveTouches) => void} GlobalInteractionHandler\n     * Object that handles any change in the number of active touches.\n     */\n    injectGlobalInteractionHandler: function (GlobalInteractionHandler) {\n      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;\n    }\n  }\n};\n\n// This is used by react-native-web.\nvar injectComponentTree = injection.injectComponentTree;\n// Inject react-dom's ComponentTree into this module.\nvar ReactDOMComponentTree = ReactDOM.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDOMComponentTree;\n\ninjectComponentTree(ReactDOMComponentTree);\n\nvar ReactDOMUnstableNativeDependencies = Object.freeze({\n\tinjectComponentTree: injectComponentTree,\n\tResponderEventPlugin: ResponderEventPlugin,\n\tResponderTouchHistoryStore: ResponderTouchHistoryStore\n});\n\nvar unstableNativeDependencies = ReactDOMUnstableNativeDependencies;\n\nmodule.exports = unstableNativeDependencies;\n  })();\n}\n"]}