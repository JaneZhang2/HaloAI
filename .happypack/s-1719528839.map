{"version":3,"sources":["node_modules/@ctrip/crnweb/src/crn/lib/Log.js"],"names":["timeHash","Max_LOG_LENGTH","noop","pushUbt","obj","global","__bfi","push","Y","now","Date","getTime","Log","page","info","page_id","code","logTrace","traceName","sInfo","JSON","stringify","encodeURIComponent","length","console","error","metricName","metricValue","name","value","tag","monitorName","monitorValue","sample","arguments","type","options","callback","TypeError","o","v","param"],"mappings":"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","file":"Log.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\n * Created by mikejay on 16/10/19.\n */\n'use strict';\nlet timeHash = {};\nconst Max_LOG_LENGTH = 8*1000;//encodeURIComponent之后的长度\nconst noop = () => {};\nlet pushUbt = (obj)=>{\n    if(!global.__bfi){\n        global.__bfi = [];\n    }\n    global.__bfi.push(obj);\n};\nconst Y ={\n    now: Date.now || function(){return (new Date()).getTime()}\n};\n/**\n * Log\n *\n * @class Log\n */\nexport default class Log {\n    /**\n     * 用户点击点击记录接口，注意code务必以\"c_\"开头\n     *\n     * @method logPage\n     * @param {String} page\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.logCode(\"home\", {\"from\":\"hotel_search\"});\n     * ```\n     */\n    static logPage(page, info = {}) {\n        info.page_id = page;\n        pushUbt([\"_asynRefresh\",info]);\n    }\n\n    /**\n     * 用户点击点击记录接口，注意code务必以\"c_\"开头\n     *\n     * @method logCode\n     * @param {String} code\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.logCode(\"c_click_login_button\");\n     * ```\n     */\n    static logCode(code, info = {}) {\n        Log.logTrace(code,info);\n    }\n\n    /**\n     * Trace 埋点,\n     *\n     * @method logTrace\n     * @param {String} traceName trace key\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.logTrace(\"trace_name_by_rn\", {ext:\"ext trace info\", eNum:444});\n     * ```\n     */\n    static logTrace(traceName, info = {}) {\n        var sInfo=JSON.stringify(info);\n        if(encodeURIComponent(sInfo).length>Max_LOG_LENGTH){\n            // throw new Error('log length is too long,after encodeURIComponent,more than 8k.');\n            console.error('[logTrace]log length is too long,after encodeURIComponent,more than 8k.',traceName,info);\n        }\n        pushUbt(['_tracklog', traceName, sInfo]);\n    }\n\n    /**\n     * Metric 埋点,\n     *\n     * @method logMetric\n     * @param {String} metricName\n     * @param {Number} metricValue\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.logMetric(\"metric_name_by_rn\", 1, {ext:\"ext info\", tNum:333});\n     * ```\n     */\n    static logMetric(metricName, metricValue, info = {}) {\n        pushUbt(['_trackMetric', {\n            name: metricName,       //{string} metric name 需要申请\n            value: metricValue,       //{number} metric value 只能是数字\n            tag: info       //可选配置,{object} Metric Tag，Tag的Key只能是字符串,tag的值长度不能超过200，数量不能超过8个\n        }]);\n    }\n\n    /**\n     * Metric 埋点,\n     *\n     * @method logMonitor\n     * @param {String}  monitorName\n     * @param {Number} monitorValue\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.logMonitor(\"monitor_name_by_rn\", 3, {ext:\"ext monitor info\", mNum:555});\n     * ```\n     */\n    static logMonitor(monitorName, monitorValue, info = {}) {\n        pushUbt(['_trackMetric', {\n            name: monitorName,       //{string} metric name 需要申请\n            value: monitorValue,       //{number} metric value 只能是数字\n            tag: info,       //可选配置,{object} Metric Tag，Tag的Key只能是字符串,tag的值长度不能超过200，数量不能超过8个\n            sample: 100    //可选配置,数据抽样率，默认100，基于访客抽样\n        }]);\n    }\n\n    /**\n     * 用于处理JS的日志发送,\n     *\n     * @method trackJSLog\n     * @param {String}  code\n     * @param {JSON} info 附加信息，可选参数\n     * @example\n     * ```\n     * Log.trackJSLog(\"code\", {ext:\"ext js info\", mNum:123});\n     * ```\n     */\n    static trackJSLog(code, info = {}) {\n        if(arguments.length===1){\n            info=code;\n            code=\"102005\";//cw_log_data\n        }\n        Log.logTrace(code, info);\n    }\n\n    //-----------------------\n    /**\n     * 用于发送UBT的数据接口，需要和PV强关联的数据请使用此接口发送统计数据。\n     *\n     * @method send\n     * @param {type}  \t(pv|tracelog|metric|error)\n     * @param {mixin}\t传对应的type接口数据\n     * @example\n     * ```\n     *\n     * // 发送PV数据\n     * Log.send('pv', {\n      * \tpage_id: '',\t\t//页面pageid，通过CMS系统上申请维护的pageID值，通过pageid可以直接查询UBT数据报表\n      * \turl: '',\n      * \torderid: '',\t\t//订单信息\n      * \trefer: ''\t\t\t//上一个页面的URL\n      * })\n     *\n     * // 发送tracelog数据\n     * Log.send('tracelog', {\n\t* \tname: '',\n\t* \tvalue: ''\n\t* })\n\n     * // 发送metric数据\n     * Log.send('metric', {\n\t* \tname: 'metric.name',\t//Metric name\n\t* \ttag: {\t\t//自定义Tag项\n\t* \t\ttag1: 'tag value'\n\t* \t},\n\t* \tvalue: 0\t//number\n\t* })\n     *\n     * // 发送Error统计\n     * Log.send('error', {\n\t* \tmessage: '',\n\t* \tfile: '',\n\t* \tcategory: '',\n\t* \tframework: '',\n\t* \tname: '',\n\t* \ttime: 0,\n\t* \tcolumn: 0\n\t* });\n     * * */\n    static send(type, options){\n        if(!type || !options){\n            return;\n        }\n        switch(type){\n            case 'pv':\n                var callback = options.callback || noop;\n                delete options.callback;\n                pushUbt([\"_asynRefresh\",options,callback ]);\n                break;\n            case 'tracelog':\n                pushUbt(['_tracklog', options.name || \"\", options.value || \"\", options.callback || noop ]);\n                break;\n            case 'metric':\n                pushUbt(['_trackMetric', options]);\n                break;\n            case 'error':\n                pushUbt(['_trackError', options]);\n                break;\n        }\n    }\n\n\n    /**\n     *  Log性能统计打点函数， 需要结合Log.timeEnd一起使用\n     *\n     * @method time\n     * @param {String}  打点标示\n     * @param {JSON}    可选， 落地到对应的Metric数据配置，如果没有配置数据不会通过Metric埋点统计\n     * @see  Log.timeEnd\n     * @example\n     * ```\n     * Log.time(\"id\", {name: 'metric.name', tag: {}});\n     * ```\n     */\n    static time(name, options){\n        if(typeof name !== 'string'){\n            throw new TypeError(\"[time]name must be a string.\");\n        }\n\n        timeHash[name] = {\n            value: Y.now(),\n            options: options || {}\n        }\n    }\n\n    /**\n     *  Log性能统计打点函数， 需要结合Log.time一起使用\n     *\n     * @method Log.timeEnd\n     * @param {String}  打点标示\n     * @param {JSON}    可选， 落地到对应的Metric数据配置\n     * @see  Log.time\n     * @example\n     * ```\n     * Log.time('performance.timing.id')\n     * // do something\n     * Log.timeEnd(\"performance.timing.id\", {name: 'metric.name', tag: {}});\n     * ```\n     */\n    static timeEnd(name, options){\n        if(typeof name !== 'string'){\n            throw new TypeError(\"[timeEnd]name must be a string.\");\n        }\n\n        var o = timeHash[name];\n        if(o && o.value){\n            var v = Y.now() - o.value;\n            var param = Object.assign(o.options, options || {});\n            if(param.name){\n                param.value = v;\n                pushUbt(['_trackMetric', param]);\n            }\n            delete timeHash[name];\n            return v;\n        }else{\n            delete timeHash[name];\n        }\n    }\n};\n\n\n"]}