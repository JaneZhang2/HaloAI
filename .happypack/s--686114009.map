{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/components/StatusBar/StatusBar.web.js"],"names":["emptyFunction","defaultStyle","global","document","navigator","userAgent","match","StatusBar","props","barStyle","setBarStyle","nextProps","Component","Platform","isInApp","CtripUtil","app_set_status_bar_style","targetStyle","style","split","map","item","index","toUpperCase","substr","join","console","log","setHidden","setNetworkActivityIndicatorVisible","setBackgroundColor","setTranslucent","isReactNativeComponent","currentHeight"],"mappings":";;;;;AAKA,a;AACA,4B;;;AAGA,GAAIA,eAAgB,UAAW,CAAE,CAAjC;;;;;AAKA,GAAIC,cAAa,cAAjB;AACA,GAAGC,OAAOC,QAAV,CAAmB;AACfF,aAAeC,OAAOE,SAAP,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiC,wBAAjC,CAAD,CAA+D,cAA/D,CAAgF,eAA9F;AACH,C;;AAEKC,S;;AAEkB;AAChB,KAAKC,KAAL,CAAWC,QAAX,EAAuBF,UAAUG,WAAV,CAAsB,KAAKF,KAAL,CAAWC,QAAjC,CAAvB;AACH,C;;AAEyBE,S,CAAW;AACjCA,UAAUF,QAAV,EAAsBE,UAAUF,QAAV,GAAuB,KAAKD,KAAL,CAAWC,QAAxD,EAAoEF,UAAUG,WAAV,CAAsBC,UAAUF,QAAhC,CAApE;AACH,C;;AAEO;AACJ,MAAO,KAAP;AACH,C,uBAZmBG,gB;;;;;AAiBbF,W,CAAc,eAAS;;AAE1B,GAAIG,mBAASC,OAAb,CAAsB;;AAElB,GAAIZ,OAAOa,SAAP,EAAoBb,OAAOa,SAAP,CAAiBC,wBAAzC,CAAmE;AAC/D,GAAMC,aAAc,CAACC,QAAU,SAAV,CAAsBjB,YAAtB,CAAqCiB,KAAtC,EAA6CC,KAA7C,CAAmD,GAAnD,EAAwDC,GAAxD,CAA4D,SAACC,IAAD,CAAOC,KAAP,QAAiBA,SAAU,CAAV,CAAcD,KAAK,CAAL,EAAQE,WAAR,GAAwBF,KAAKG,MAAL,CAAY,CAAZ,CAAtC,CAAuDH,IAAxE,EAA5D,EAA0II,IAA1I,CAA+I,EAA/I,CAApB;AACAvB,OAAOa,SAAP,CAAiBC,wBAAjB,CAA0CC,WAA1C;AACH,CAHD;AAIK;AACDS,QAAQC,GAAR,CAAY,4CAAZ;AACH;;AAEJ;;AAEJ,C;AACMC,S,CAAY5B,a;AACZ6B,kC,CAAqC7B,a;AACrC8B,kB,CAAqB9B,a;AACrB+B,c,CAAiB/B,a;AACjBgC,sB,CAAyB,I;AACzBC,a,CAAgB,C;;AAEZ1B,S","file":"StatusBar.web.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["/**\r\n * Copyright (c) 2016-present, Ctrip\r\n * All rights reserved.\r\n * @providesModule StatusBar\r\n */\r\n'use strict';\r\nimport React,{Component} from 'react';\r\nimport {Platform} from 'react-native';\r\n\r\nlet emptyFunction = function() {};\r\n\r\n// default - 默认的样式（IOS为白底黑字、Android为黑底白字）\r\n// light-content - 黑底白字\r\n// dark-content - 白底黑字\r\nlet defaultStyle=\"dark-content\";\r\nif(global.document){\r\n    defaultStyle= (global.navigator.userAgent.match(/(iPhone\\sOS)\\s([\\d_]+)/)) ? 'dark-content' : 'light-content';\r\n}\r\n\r\nclass StatusBar extends Component{\r\n    \r\n    componentDidMount() {\r\n        this.props.barStyle && StatusBar.setBarStyle(this.props.barStyle);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        nextProps.barStyle && nextProps.barStyle !== this.props.barStyle && StatusBar.setBarStyle(nextProps.barStyle);\r\n    }\r\n\r\n    render(){\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * @enum('default', 'light-content', 'dark-content')\r\n     */\r\n    static setBarStyle = style => {\r\n\r\n        if (Platform.isInApp) {\r\n\r\n            if (global.CtripUtil && global.CtripUtil.app_set_status_bar_style) {\r\n                const targetStyle = (style === 'default' ? defaultStyle : style).split('-').map((item, index) => index !== 0 ? item[0].toUpperCase() + item.substr(1) : item).join('');\r\n                global.CtripUtil.app_set_status_bar_style(targetStyle);\r\n            }\r\n            else {\r\n                console.log('app_set_status_bar_style is not exist now!');\r\n            }\r\n            \r\n        }\r\n\r\n    };\r\n    static setHidden = emptyFunction;\r\n    static setNetworkActivityIndicatorVisible = emptyFunction;\r\n    static setBackgroundColor = emptyFunction;\r\n    static setTranslucent = emptyFunction;\r\n    static isReactNativeComponent = true;\r\n    static currentHeight = 0;\r\n}\r\nexport default StatusBar\r\n"]}