{"version":3,"sources":["node_modules/@ctrip/crnweb/src/react-native/components/ScrollView/Resizable.js"],"names":["Resizable","props","lastDimensions","width","height","onScroll","bind","resetTriggers","trailing","resizable","ReactDOM","findDOMNode","resizableRef","contract","contractRef","expandChild","expandChildRef","expand","expandRef","fastdom","measure","n1","scrollWidth","n2","scrollHeight","n3","offsetWidth","n4","offsetHeight","n5","n6","mutate","scrollLeft","scrollTop","style","dimensions","getDimensions","haveDimensionsChanged","onResize","ins","children","triggersRef","Component"],"mappings":"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","file":"Resizable.js","sourceRoot":"/Users/jane/Documents/HaloAI","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport View from './../../components/View/View.web';\r\nimport debounce from 'lodash/debounce';\r\nimport fastdom from 'fastdom';\r\n\r\n\r\n// 用于ScrollView Size改变时应用refresh函数\r\n// 触发频率：仅当size改变时，触发onScroll函数一两次左右，所以并不是频繁触发的组件，平时scroll不会触发\r\nclass Resizable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.lastDimensions = {\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        this.onScroll = this.onScroll.bind(this);\r\n        this.resetTriggers = debounce(this.resetTriggers.bind(this), 100, {\r\n            trailing: true\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resizable = ReactDOM.findDOMNode(this.resizableRef);\r\n        this.contract = ReactDOM.findDOMNode(this.contractRef);\r\n        this.expandChild = ReactDOM.findDOMNode(this.expandChildRef);\r\n        this.expand = ReactDOM.findDOMNode(this.expandRef);\r\n        this.resetTriggers();\r\n    }\r\n\r\n    resetTriggers() {\r\n\r\n        fastdom.measure(() => {\r\n            let n1 = this.contract.scrollWidth,\r\n                n2 = this.contract.scrollHeight,\r\n                n3 = this.expand.offsetWidth + 1 + 'px',\r\n                n4 = this.expand.offsetHeight + 1 + 'px',\r\n                n5 = this.expand.scrollWidth,\r\n                n6 = this.expand.scrollHeight;\r\n            fastdom.mutate(() => {\r\n                this.contract.scrollLeft = n1;\r\n                this.contract.scrollTop = n2;\r\n                this.expandChild.style.width = n3;\r\n                this.expandChild.style.height = n4;\r\n                this.expand.scrollLeft = n5;\r\n                this.expand.scrollTop = n6;\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    onScroll() {\r\n        //tp('Resizble onScroll');\r\n        this.resetTriggers();\r\n        fastdom.measure(() => {\r\n            let dimensions = this.getDimensions();\r\n            fastdom.mutate(() => {\r\n                if (this.haveDimensionsChanged(dimensions)) {\r\n                    this.lastDimensions = dimensions;\r\n                    this.props.onResize && this.props.onResize(dimensions);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    getDimensions() {\r\n        return {\r\n            width: this.resizable.offsetWidth,\r\n            height: this.resizable.offsetHeight\r\n        };\r\n    }\r\n\r\n    haveDimensionsChanged(dimensions) {\r\n        return dimensions.width != this.lastDimensions.width || dimensions.height != this.lastDimensions.height;\r\n    }\r\n\r\n\r\n    render() {\r\n        // tp('resizable render');\r\n        return (\r\n            <View {...this.props} ref={(ins)=>{this.resizableRef=ins}}  onScroll={this.onScroll}>\r\n                {this.props.children}\r\n                <div className=\"resize-triggers\" ref = {(ins)=>{this.triggersRef=ins}}>\r\n                    <div className=\"expand-trigger\" ref={(ins)=>{this.expandRef=ins}}>\r\n                        <div className=\"expand-child\" ref={(ins)=>{this.expandChildRef=ins}}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"contract-trigger\" ref={(ins)=>{this.contractRef=ins}}>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resizable;\r\n"]}